

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Fri Apr 09 17:01:54 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 15 "G:\test lcd\test lcd.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 15 "G:\test lcd\test lcd.c"
    45  2007  3F7A               	dw 0x3FFE & 0x3FFB & 0x3FFF & 0x3F7F ;#
    46                           ;BANK0:	_main->_print_string
    47                           ;COMMON:	_print_string->_print_char
    48                           ;COMMON:	_print_char->_attente_bf
    49                           ;COMMON:	_attente_bf->_lecture_commande
    50                           ;COMMON:	_lecture_commande->_tempo_N_ms
    51                           ;COMMON:	_print_string->_strlen
    52                           	FNCALL	_main,_init_PORTD
    53                           	FNCALL	_main,_allume_LCD
    54                           	FNCALL	_main,_init_LCD
    55                           	FNCALL	_main,_print_string
    56                           	FNCALL	_main,_ecran_gauche
    57                           	FNCALL	_main,_tempo_N_ms
    58                           	FNCALL	_ecran_gauche,_ecriture_commande
    59                           	FNCALL	_print_string,_print_char
    60                           	FNCALL	_print_string,_strlen
    61                           	FNCALL	_init_LCD,_tempo_N_ms
    62                           	FNCALL	_init_LCD,_ecriture_commande
    63                           	FNCALL	_print_char,_attente_bf
    64                           	FNCALL	_ecriture_commande,_attente_bf
    65                           	FNCALL	_attente_bf,_lecture_commande
    66                           	FNCALL	_lecture_commande,_tempo_N_ms
    67                           	FNCALL	_tempo_N_ms,_tempo_1_ms
    68                           	FNROOT	_main
    69                           	global	_i
    70                           	global	_ADCON0
    71                           psect	text94,local,class=CODE,delta=2
    72                           global __ptext94
    73  06AE                     __ptext94:
    74  001F                     _ADCON0  equ     31
    75                           	global	_ADRESH
    76  001E                     _ADRESH  equ     30
    77                           	global	_CCP1CON
    78  0017                     _CCP1CON  equ     23
    79                           	global	_CCP2CON
    80  001D                     _CCP2CON  equ     29
    81                           	global	_CCPR1H
    82  0016                     _CCPR1H  equ     22
    83                           	global	_CCPR1L
    84  0015                     _CCPR1L  equ     21
    85                           	global	_CCPR2H
    86  001C                     _CCPR2H  equ     28
    87                           	global	_CCPR2L
    88  001B                     _CCPR2L  equ     27
    89                           	global	_FSR
    90  0004                     _FSR  equ     4
    91                           	global	_INDF
    92  0000                     _INDF  equ     0
    93                           	global	_INTCON
    94  000B                     _INTCON  equ     11
    95                           	global	_PCL
    96  0002                     _PCL  equ     2
    97                           	global	_PCLATH
    98  000A                     _PCLATH  equ     10
    99                           	global	_PIR1
   100  000C                     _PIR1  equ     12
   101                           	global	_PIR2
   102  000D                     _PIR2  equ     13
   103                           	global	_PORTA
   104  0005                     _PORTA  equ     5
   105                           	global	_PORTB
   106  0006                     _PORTB  equ     6
   107                           	global	_PORTC
   108  0007                     _PORTC  equ     7
   109                           	global	_PORTD
   110  0008                     _PORTD  equ     8
   111                           	global	_PORTE
   112  0009                     _PORTE  equ     9
   113                           	global	_RCREG
   114  001A                     _RCREG  equ     26
   115                           	global	_RCSTA
   116  0018                     _RCSTA  equ     24
   117                           	global	_SSPBUF
   118  0013                     _SSPBUF  equ     19
   119                           	global	_SSPCON
   120  0014                     _SSPCON  equ     20
   121                           	global	_STATUS
   122  0003                     _STATUS  equ     3
   123                           	global	_T1CON
   124  0010                     _T1CON  equ     16
   125                           	global	_T2CON
   126  0012                     _T2CON  equ     18
   127                           	global	_TMR0
   128  0001                     _TMR0  equ     1
   129                           	global	_TMR1H
   130  000F                     _TMR1H  equ     15
   131                           	global	_TMR1L
   132  000E                     _TMR1L  equ     14
   133                           	global	_TMR2
   134  0011                     _TMR2  equ     17
   135                           	global	_TXREG
   136  0019                     _TXREG  equ     25
   137                           	global	_ADCS0
   138  00FE                     _ADCS0  equ     254
   139                           	global	_ADCS1
   140  00FF                     _ADCS1  equ     255
   141                           	global	_ADDEN
   142  00C3                     _ADDEN  equ     195
   143                           	global	_ADGO
   144  00FA                     _ADGO  equ     250
   145                           	global	_ADIF
   146  0066                     _ADIF  equ     102
   147                           	global	_ADON
   148  00F8                     _ADON  equ     248
   149                           	global	_BCLIF
   150  006B                     _BCLIF  equ     107
   151                           	global	_CARRY
   152  0018                     _CARRY  equ     24
   153                           	global	_CCP1IF
   154  0062                     _CCP1IF  equ     98
   155                           	global	_CCP1M0
   156  00B8                     _CCP1M0  equ     184
   157                           	global	_CCP1M1
   158  00B9                     _CCP1M1  equ     185
   159                           	global	_CCP1M2
   160  00BA                     _CCP1M2  equ     186
   161                           	global	_CCP1M3
   162  00BB                     _CCP1M3  equ     187
   163                           	global	_CCP1X
   164  00BD                     _CCP1X  equ     189
   165                           	global	_CCP1Y
   166  00BC                     _CCP1Y  equ     188
   167                           	global	_CCP2IF
   168  0068                     _CCP2IF  equ     104
   169                           	global	_CCP2M0
   170  00E8                     _CCP2M0  equ     232
   171                           	global	_CCP2M1
   172  00E9                     _CCP2M1  equ     233
   173                           	global	_CCP2M2
   174  00EA                     _CCP2M2  equ     234
   175                           	global	_CCP2M3
   176  00EB                     _CCP2M3  equ     235
   177                           	global	_CCP2X
   178  00ED                     _CCP2X  equ     237
   179                           	global	_CCP2Y
   180  00EC                     _CCP2Y  equ     236
   181                           	global	_CHS0
   182  00FB                     _CHS0  equ     251
   183                           	global	_CHS1
   184  00FC                     _CHS1  equ     252
   185                           	global	_CHS2
   186  00FD                     _CHS2  equ     253
   187                           	global	_CKP
   188  00A4                     _CKP  equ     164
   189                           	global	_CMIF
   190  006E                     _CMIF  equ     110
   191                           	global	_CREN
   192  00C4                     _CREN  equ     196
   193                           	global	_DC
   194  0019                     _DC  equ     25
   195                           	global	_EEIF
   196  006C                     _EEIF  equ     108
   197                           	global	_FERR
   198  00C2                     _FERR  equ     194
   199                           	global	_GIE
   200  005F                     _GIE  equ     95
   201                           	global	_GODONE
   202  00FA                     _GODONE  equ     250
   203                           	global	_INTE
   204  005C                     _INTE  equ     92
   205                           	global	_INTF
   206  0059                     _INTF  equ     89
   207                           	global	_IRP
   208  001F                     _IRP  equ     31
   209                           	global	_OERR
   210  00C1                     _OERR  equ     193
   211                           	global	_PD
   212  001B                     _PD  equ     27
   213                           	global	_PEIE
   214  005E                     _PEIE  equ     94
   215                           	global	_PSPIF
   216  0067                     _PSPIF  equ     103
   217                           	global	_RA0
   218  0028                     _RA0  equ     40
   219                           	global	_RA1
   220  0029                     _RA1  equ     41
   221                           	global	_RA2
   222  002A                     _RA2  equ     42
   223                           	global	_RA3
   224  002B                     _RA3  equ     43
   225                           	global	_RA4
   226  002C                     _RA4  equ     44
   227                           	global	_RA5
   228  002D                     _RA5  equ     45
   229                           	global	_RB0
   230  0030                     _RB0  equ     48
   231                           	global	_RB1
   232  0031                     _RB1  equ     49
   233                           	global	_RB2
   234  0032                     _RB2  equ     50
   235                           	global	_RB3
   236  0033                     _RB3  equ     51
   237+                          	global	_RB4
   238+ 0034                     _RB4  equ     52
   239+                          	global	_RB5
   240+ 0035                     _RB5  equ     53
   241                           	global	_RB6
   242  0036                     _RB6  equ     54
   243                           	global	_RB7
   244  0037                     _RB7  equ     55
   245                           	global	_RBIE
   246  005B                     _RBIE  equ     91
   247                           	global	_RBIF
   248  0058                     _RBIF  equ     88
   249                           	global	_RC0
   250  0038                     _RC0  equ     56
   251                           	global	_RC1
   252  0039                     _RC1  equ     57
   253                           	global	_RC2
   254  003A                     _RC2  equ     58
   255                           	global	_RC3
   256  003B                     _RC3  equ     59
   257                           	global	_RC4
   258  003C                     _RC4  equ     60
   259                           	global	_RC5
   260  003D                     _RC5  equ     61
   261                           	global	_RC6
   262  003E                     _RC6  equ     62
   263                           	global	_RC7
   264  003F                     _RC7  equ     63
   265                           	global	_RCIF
   266  0065                     _RCIF  equ     101
   267                           	global	_RD0
   268  0040                     _RD0  equ     64
   269                           	global	_RD1
   270  0041                     _RD1  equ     65
   271                           	global	_RD2
   272  0042                     _RD2  equ     66
   273                           	global	_RD3
   274  0043                     _RD3  equ     67
   275                           	global	_RD4
   276  0044                     _RD4  equ     68
   277                           	global	_RD5
   278  0045                     _RD5  equ     69
   279                           	global	_RD6
   280  0046                     _RD6  equ     70
   281                           	global	_RD7
   282  0047                     _RD7  equ     71
   283                           	global	_RE0
   284  0048                     _RE0  equ     72
   285                           	global	_RE1
   286  0049                     _RE1  equ     73
   287                           	global	_RE2
   288  004A                     _RE2  equ     74
   289                           	global	_RP0
   290  001D                     _RP0  equ     29
   291                           	global	_RP1
   292  001E                     _RP1  equ     30
   293                           	global	_RX9
   294  00C6                     _RX9  equ     198
   295                           	global	_RX9D
   296  00C0                     _RX9D  equ     192
   297                           	global	_SPEN
   298  00C7                     _SPEN  equ     199
   299                           	global	_SREN
   300  00C5                     _SREN  equ     197
   301                           	global	_SSPEN
   302  00A5                     _SSPEN  equ     165
   303                           	global	_SSPIF
   304  0063                     _SSPIF  equ     99
   305                           	global	_SSPM0
   306  00A0                     _SSPM0  equ     160
   307                           	global	_SSPM1
   308  00A1                     _SSPM1  equ     161
   309                           	global	_SSPM2
   310  00A2                     _SSPM2  equ     162
   311                           	global	_SSPM3
   312  00A3                     _SSPM3  equ     163
   313                           	global	_SSPOV
   314  00A6                     _SSPOV  equ     166
   315                           	global	_T0IE
   316  005D                     _T0IE  equ     93
   317                           	global	_T0IF
   318  005A                     _T0IF  equ     90
   319                           	global	_T1CKPS0
   320  0084                     _T1CKPS0  equ     132
   321                           	global	_T1CKPS1
   322  0085                     _T1CKPS1  equ     133
   323                           	global	_T1OSCEN
   324  0083                     _T1OSCEN  equ     131
   325                           	global	_T1SYNC
   326  0082                     _T1SYNC  equ     130
   327                           	global	_T2CKPS0
   328  0090                     _T2CKPS0  equ     144
   329                           	global	_T2CKPS1
   330  0091                     _T2CKPS1  equ     145
   331                           	global	_TMR0IE
   332  005D                     _TMR0IE  equ     93
   333                           	global	_TMR0IF
   334  005A                     _TMR0IF  equ     90
   335                           	global	_TMR1CS
   336  0081                     _TMR1CS  equ     129
   337                           	global	_TMR1IF
   338  0060                     _TMR1IF  equ     96
   339                           	global	_TMR1ON
   340  0080                     _TMR1ON  equ     128
   341                           	global	_TMR2IF
   342  0061                     _TMR2IF  equ     97
   343                           	global	_TMR2ON
   344  0092                     _TMR2ON  equ     146
   345                           	global	_TO
   346  001C                     _TO  equ     28
   347                           	global	_TOUTPS0
   348  0093                     _TOUTPS0  equ     147
   349                           	global	_TOUTPS1
   350  0094                     _TOUTPS1  equ     148
   351                           	global	_TOUTPS2
   352  0095                     _TOUTPS2  equ     149
   353                           	global	_TOUTPS3
   354  0096                     _TOUTPS3  equ     150
   355                           	global	_TXIF
   356  0064                     _TXIF  equ     100
   357                           	global	_WCOL
   358  00A7                     _WCOL  equ     167
   359                           	global	_ZERO
   360  001A                     _ZERO  equ     26
   361                           	global	_ADCON1
   362  009F                     _ADCON1  equ     159
   363                           	global	_ADRESL
   364  009E                     _ADRESL  equ     158
   365                           	global	_CMCON
   366  009C                     _CMCON  equ     156
   367                           	global	_CVRCON
   368  009D                     _CVRCON  equ     157
   369                           	global	_OPTION
   370  0081                     _OPTION  equ     129
   371                           	global	_PCON
   372  008E                     _PCON  equ     142
   373                           	global	_PIE1
   374  008C                     _PIE1  equ     140
   375                           	global	_PIE2
   376  008D                     _PIE2  equ     141
   377                           	global	_PR2
   378  0092                     _PR2  equ     146
   379                           	global	_SPBRG
   380  0099                     _SPBRG  equ     153
   381                           	global	_SSPADD
   382  0093                     _SSPADD  equ     147
   383                           	global	_SSPCON2
   384  0091                     _SSPCON2  equ     145
   385                           	global	_SSPSTAT
   386  0094                     _SSPSTAT  equ     148
   387                           	global	_TRISA
   388  0085                     _TRISA  equ     133
   389                           	global	_TRISB
   390  0086                     _TRISB  equ     134
   391                           	global	_TRISC
   392  0087                     _TRISC  equ     135
   393                           	global	_TRISD
   394  0088                     _TRISD  equ     136
   395                           	global	_TRISE
   396  0089                     _TRISE  equ     137
   397                           	global	_TXSTA
   398  0098                     _TXSTA  equ     152
   399                           	global	_ACKDT
   400  048D                     _ACKDT  equ     1165
   401                           	global	_ACKEN
   402  048C                     _ACKEN  equ     1164
   403                           	global	_ACKSTAT
   404  048E                     _ACKSTAT  equ     1166
   405                           	global	_ADCS2
   406  04FE                     _ADCS2  equ     1278
   407                           	global	_ADFM
   408  04FF                     _ADFM  equ     1279
   409                           	global	_ADIE
   410  0466                     _ADIE  equ     1126
   411                           	global	_BCLIE
   412  046B                     _BCLIE  equ     1131
   413                           	global	_BF
   414  04A0                     _BF  equ     1184
   415                           	global	_BOR
   416  0470                     _BOR  equ     1136
   417                           	global	_BRGH
   418  04C2                     _BRGH  equ     1218
   419                           	global	_C1INV
   420  04E4                     _C1INV  equ     1252
   421                           	global	_C1OUT
   422  04E6                     _C1OUT  equ     1254
   423                           	global	_C2INV
   424  04E5                     _C2INV  equ     1253
   425                           	global	_C2OUT
   426  04E7                     _C2OUT  equ     1255
   427                           	global	_CCP1IE
   428  0462                     _CCP1IE  equ     1122
   429                           	global	_CCP2IE
   430  0468                     _CCP2IE  equ     1128
   431                           	global	_CIS
   432  04E3                     _CIS  equ     1251
   433                           	global	_CKE
   434  04A6                     _CKE  equ     1190
   435                           	global	_CM0
   436  04E0                     _CM0  equ     1248
   437                           	global	_CM1
   438  04E1                     _CM1  equ     1249
   439                           	global	_CM2
   440  04E2                     _CM2  equ     1250
   441                           	global	_CMIE
   442  046E                     _CMIE  equ     1134
   443                           	global	_CSRC
   444  04C7                     _CSRC  equ     1223
   445                           	global	_CVR0
   446  04E8                     _CVR0  equ     1256
   447                           	global	_CVR1
   448  04E9                     _CVR1  equ     1257
   449                           	global	_CVR2
   450  04EA                     _CVR2  equ     1258
   451                           	global	_CVR3
   452  04EB                     _CVR3  equ     1259
   453                           	global	_CVREN
   454  04EF                     _CVREN  equ     1263
   455                           	global	_CVROE
   456  04EE                     _CVROE  equ     1262
   457                           	global	_CVRR
   458  04ED                     _CVRR  equ     1261
   459                           	global	_DA
   460  04A5                     _DA  equ     1189
   461                           	global	_EEIE
   462  046C                     _EEIE  equ     1132
   463                           	global	_GCEN
   464  048F                     _GCEN  equ     1167
   465                           	global	_IBF
   466  044F                     _IBF  equ     1103
   467                           	global	_IBOV
   468  044D                     _IBOV  equ     1101
   469                           	global	_INTEDG
   470  040E                     _INTEDG  equ     1038
   471                           	global	_OBF
   472  044E                     _OBF  equ     1102
   473                           	global	_PCFG0
   474  04F8                     _PCFG0  equ     1272
   475                           	global	_PCFG1
   476  04F9                     _PCFG1  equ     1273
   477                           	global	_PCFG2
   478  04FA                     _PCFG2  equ     1274
   479                           	global	_PCFG3
   480  04FB                     _PCFG3  equ     1275
   481                           	global	_PEN
   482  048A                     _PEN  equ     1162
   483                           	global	_POR
   484  0471                     _POR  equ     1137
   485                           	global	_PS0
   486  0408                     _PS0  equ     1032
   487                           	global	_PS1
   488  0409                     _PS1  equ     1033
   489                           	global	_PS2
   490  040A                     _PS2  equ     1034
   491                           	global	_PSA
   492  040B                     _PSA  equ     1035
   493                           	global	_PSPIE
   494  0467                     _PSPIE  equ     1127
   495                           	global	_PSPMODE
   496  044C                     _PSPMODE  equ     1100
   497                           	global	_RBPU
   498  040F                     _RBPU  equ     1039
   499                           	global	_RCEN
   500  048B                     _RCEN  equ     1163
   501                           	global	_RCIE
   502  0465                     _RCIE  equ     1125
   503                           	global	_RSEN
   504  0489                     _RSEN  equ     1161
   505                           	global	_RW
   506  04A2                     _RW  equ     1186
   507                           	global	_SEN
   508  0488                     _SEN  equ     1160
   509                           	global	_SMP
   510  04A7                     _SMP  equ     1191
   511                           	global	_SSPIE
   512  0463                     _SSPIE  equ     1123
   513                           	global	_START
   514  04A3                     _START  equ     1187
   515                           	global	_STOP
   516  04A4                     _STOP  equ     1188
   517                           	global	_SYNC
   518  04C4                     _SYNC  equ     1220
   519                           	global	_T0CS
   520  040D                     _T0CS  equ     1037
   521                           	global	_T0SE
   522  040C                     _T0SE  equ     1036
   523                           	global	_TMR1IE
   524  0460                     _TMR1IE  equ     1120
   525                           	global	_TMR2IE
   526  0461                     _TMR2IE  equ     1121
   527                           	global	_TRISA0
   528  0428                     _TRISA0  equ     1064
   529                           	global	_TRISA1
   530  0429                     _TRISA1  equ     1065
   531                           	global	_TRISA2
   532  042A                     _TRISA2  equ     1066
   533                           	global	_TRISA3
   534  042B                     _TRISA3  equ     1067
   535                           	global	_TRISA4
   536  042C                     _TRISA4  equ     1068
   537                           	global	_TRISA5
   538  042D                     _TRISA5  equ     1069
   539                           	global	_TRISB0
   540  0430                     _TRISB0  equ     1072
   541                           	global	_TRISB1
   542  0431                     _TRISB1  equ     1073
   543                           	global	_TRISB2
   544  0432                     _TRISB2  equ     1074
   545                           	global	_TRISB3
   546  0433                     _TRISB3  equ     1075
   547                           	global	_TRISB4
   548  0434                     _TRISB4  equ     1076
   549                           	global	_TRISB5
   550  0435                     _TRISB5  equ     1077
   551                           	global	_TRISB6
   552  0436                     _TRISB6  equ     1078
   553                           	global	_TRISB7
   554  0437                     _TRISB7  equ     1079
   555                           	global	_TRISC0
   556  0438                     _TRISC0  equ     1080
   557                           	global	_TRISC1
   558  0439                     _TRISC1  equ     1081
   559                           	global	_TRISC2
   560  043A                     _TRISC2  equ     1082
   561                           	global	_TRISC3
   562  043B                     _TRISC3  equ     1083
   563                           	global	_TRISC4
   564  043C                     _TRISC4  equ     1084
   565                           	global	_TRISC5
   566  043D                     _TRISC5  equ     1085
   567                           	global	_TRISC6
   568  043E                     _TRISC6  equ     1086
   569                           	global	_TRISC7
   570  043F                     _TRISC7  equ     1087
   571                           	global	_TRISD0
   572  0440                     _TRISD0  equ     1088
   573                           	global	_TRISD1
   574  0441                     _TRISD1  equ     1089
   575                           	global	_TRISD2
   576  0442                     _TRISD2  equ     1090
   577                           	global	_TRISD3
   578  0443                     _TRISD3  equ     1091
   579                           	global	_TRISD4
   580  0444                     _TRISD4  equ     1092
   581                           	global	_TRISD5
   582  0445                     _TRISD5  equ     1093
   583                           	global	_TRISD6
   584  0446                     _TRISD6  equ     1094
   585                           	global	_TRISD7
   586  0447                     _TRISD7  equ     1095
   587                           	global	_TRISE0
   588  0448                     _TRISE0  equ     1096
   589                           	global	_TRISE1
   590  0449                     _TRISE1  equ     1097
   591                           	global	_TRISE2
   592  044A                     _TRISE2  equ     1098
   593                           	global	_TRMT
   594  04C1                     _TRMT  equ     1217
   595                           	global	_TX9
   596  04C6                     _TX9  equ     1222
   597                           	global	_TX9D
   598  04C0                     _TX9D  equ     1216
   599                           	global	_TXEN
   600  04C5                     _TXEN  equ     1221
   601                           	global	_TXIE
   602  0464                     _TXIE  equ     1124
   603                           	global	_UA
   604  04A1                     _UA  equ     1185
   605                           	global	_EEADR
   606  010D                     _EEADR  equ     269
   607                           	global	_EEADRH
   608  010F                     _EEADRH  equ     271
   609                           	global	_EEADRL
   610  010D                     _EEADRL  equ     269
   611                           	global	_EEDATA
   612  010C                     _EEDATA  equ     268
   613                           	global	_EEDATH
   614  010E                     _EEDATH  equ     270
   615                           	global	_EECON1
   616  018C                     _EECON1  equ     396
   617                           	global	_EECON2
   618  018D                     _EECON2  equ     397
   619                           	global	_EEPGD
   620  0C67                     _EEPGD  equ     3175
   621                           	global	_RD
   622  0C60                     _RD  equ     3168
   623                           	global	_WR
   624  0C61                     _WR  equ     3169
   625                           	global	_WREN
   626  0C62                     _WREN  equ     3170
   627                           	global	_WRERR
   628  0C63                     _WRERR  equ     3171
   629                           psect	strings,class=CODE,delta=2,reloc=256
   630                           global __pstrings
   631  0600                     __pstrings:
   632                           	global	stringdir,stringtab,__stringbase,stringjmp
   633  0600                     stringtab:
   634                           ;	String table - string pointers are 1 byte each
   635  0600  00FE               	movwf	(btemp)&07Fh
   636  0601  1FFE               	btfss	(btemp)&07Fh,7
   637  0602  2E08               	goto	stringcode
   638  0603  1383               	bcf	status,7
   639  0604  187E               	btfsc	btemp&7Fh,0
   640  0605  1783               	bsf	status,7
   641  0606  0800               	movf	indf,w
   642  0607  0008               	return
   643  0608                     stringcode:
   644  0608  0804               	movf	fsr,w
   645  0609                     stringdir:
   646  0609  00FE               movwf btemp&07Fh
   647  060A  3006               movlw high(stringdir)
   648  060B  008A               movwf pclath
   649  060C  087E               movf btemp&07Fh,w
   650  060D                     stringjmp:
   651  060D  0782               	addwf pc
   652  060E                     __stringbase:
   653  060E  3400               	retlw	0
   654                           psect	strings
   655                           	
   656  060F                     STR_1:	
   657  060F  3442               	retlw	66	;'B'
   658  0610  346F               	retlw	111	;'o'
   659  0611  346E               	retlw	110	;'n'
   660  0612  346A               	retlw	106	;'j'
   661  0613  346F               	retlw	111	;'o'
   662  0614  3475               	retlw	117	;'u'
   663  0615  3472               	retlw	114	;'r'
   664  0616  3420               	retlw	32	;' '
   665  0617  346C               	retlw	108	;'l'
   666  0618  3465               	retlw	101	;'e'
   667  0619  3473               	retlw	115	;'s'
   668  061A  3420               	retlw	32	;' '
   669  061B  3469               	retlw	105	;'i'
   670  061C  346E               	retlw	110	;'n'
   671  061D  3473               	retlw	115	;'s'
   672  061E  3474               	retlw	116	;'t'
   673  061F  3472               	retlw	114	;'r'
   674  0620  3475               	retlw	117	;'u'
   675  0621  3420               	retlw	32	;' '
   676  0622  3420               	retlw	32	;' '
   677  0623  3400               	retlw	0
   678                           psect	strings
   679                           	file	"test lcd.as"
   680                           	line	#
   681                           psect cinit,class=CODE,delta=2
   682                           global start_initialization
   683  06A4                     start_initialization:
   684                           
   685                           psect	bssCOMMON,class=COMMON,space=1
   686                           global __pbssCOMMON
   687  0078                     __pbssCOMMON:
   688  0078                     _i:
   689  0078                            ds      2
   690                           
   691                           ; Clear objects allocated to COMMON
   692                           psect cinit,class=CODE,delta=2
   693  06A4  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   694  06A5  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   695                           psect cinit,class=CODE,delta=2
   696                           global end_of_initialization
   697                           
   698                           ;End of C runtime variable initationation code
   699                           
   700  06A6                     end_of_initialization:
   701  06A6  0183               clrf status
   702  06A7  120A  118A  2EE9   ljmp _main	;jump to C main() function
   703                           psect	cstackCOMMON,class=COMMON,space=1
   704                           global __pcstackCOMMON
   705  0070                     __pcstackCOMMON:
   706                           	global	??_init_PORTD
   707  0070                     ??_init_PORTD: ;@ 0x0
   708                           	global	?_init_PORTD
   709  0070                     ?_init_PORTD: ;@ 0x0
   710                           	global	?_allume_LCD
   711  0070                     ?_allume_LCD: ;@ 0x0
   712                           	global	??_strlen
   713  0070                     ??_strlen: ;@ 0x0
   714                           	global	??_allume_LCD
   715  0070                     ??_allume_LCD: ;@ 0x0
   716                           	global	?_tempo_N_ms
   717  0070                     ?_tempo_N_ms: ;@ 0x0
   718                           	global	??_tempo_N_ms
   719  0070                     ??_tempo_N_ms: ;@ 0x0
   720                           	global	?_tempo_1_ms
   721  0070                     ?_tempo_1_ms: ;@ 0x0
   722                           	global	??_tempo_1_ms
   723  0070                     ??_tempo_1_ms: ;@ 0x0
   724                           	global	tempo_N_ms@N
   725  0070                     tempo_N_ms@N:	; 2 bytes @ 0x0
   726  0070                     	ds	2
   727                           	global	??_lecture_commande
   728  0072                     ??_lecture_commande: ;@ 0x2
   729  0072                     	ds	1
   730                           	global	??_ecran_gauche
   731  0073                     ??_ecran_gauche: ;@ 0x3
   732+                          	global	??_init_LCD
   733+ 0073                     ??_init_LCD: ;@ 0x3
   734+                          	global	lecture_commande@quartet_commande
   735+ 0073                     lecture_commande@quartet_commande:	; 1 bytes @ 0x3
   736  0073                     	ds	1
   737                           	global	??_print_string
   738  0074                     ??_print_string: ;@ 0x4
   739                           	global	??_main
   740  0074                     ??_main: ;@ 0x4
   741                           	global	strlen@s
   742  0074                     strlen@s:	; 1 bytes @ 0x4
   743                           	global	lecture_commande@commande
   744  0074                     lecture_commande@commande:	; 1 bytes @ 0x4
   745  0074                     	ds	1
   746                           	global	??_attente_bf
   747  0075                     ??_attente_bf: ;@ 0x5
   748                           	global	?_lecture_commande
   749  0075                     ?_lecture_commande: ;@ 0x5
   750                           	global	strlen@cp
   751  0075                     strlen@cp:	; 1 bytes @ 0x5
   752  0075                     	ds	1
   753                           	global	??_ecriture_commande
   754  0076                     ??_ecriture_commande: ;@ 0x6
   755                           	global	?_attente_bf
   756  0076                     ?_attente_bf: ;@ 0x6
   757                           	global	??_print_char
   758  0076                     ??_print_char: ;@ 0x6
   759                           	global	?_strlen
   760  0076                     ?_strlen: ;@ 0x6
   761  0076                     	ds	1
   762                           	global	print_char@car
   763  0077                     print_char@car:	; 1 bytes @ 0x7
   764                           	global	ecriture_commande@commande
   765  0077                     ecriture_commande@commande:	; 1 bytes @ 0x7
   766  0077                     	ds	1
   767                           	global	?_print_string
   768  0078                     ?_print_string: ;@ 0x8
   769                           	global	?_main
   770  0078                     ?_main: ;@ 0x8
   771                           	global	?_ecran_gauche
   772  0078                     ?_ecran_gauche: ;@ 0x8
   773                           	global	?_print_char
   774  0078                     ?_print_char: ;@ 0x8
   775                           	global	?_ecriture_commande
   776  0078                     ?_ecriture_commande: ;@ 0x8
   777                           	global	?_init_LCD
   778  0078                     ?_init_LCD: ;@ 0x8
   779                           psect	cstackBANK0,class=BANK0,space=1
   780                           global __pcstackBANK0
   781  0020                     __pcstackBANK0:
   782                           	global	print_string@s
   783  0020                     print_string@s:	; 1 bytes @ 0x0
   784  0020                     	ds	1
   785                           	global	print_string@i
   786  0021                     print_string@i:	; 2 bytes @ 0x1
   787  0021                     	ds	2
   788                           	global	main@message
   789  0023                     main@message:	; 1 bytes @ 0x3
   790  0023                     	ds	1
   791                           ;Data sizes: Strings 21, constant 0, data 0, bss 2, persistent 0 stack 0
   792                           ;Auto spaces:   Size  Autos    Used
   793                           ; COMMON          14      8      10
   794                           ; BANK0           80      4       4
   795                           ; BANK1           80      0       0
   796                           ; BANK3           96      0       0
   797                           ; BANK2           96      0       0
   798                           
   799                           
   800                           ;Pointer list with targets:
   801                           
   802                           ;print_string@s	PTR unsigned char  size(1); Largest target is 21
   803                           ;		 -> STR_1(CODE[21]), 
   804                           ;?_strlen	unsigned int  size(1); Largest target is 21
   805                           ;		 -> STR_1(CODE[21]), 
   806                           ;main@message	PTR unsigned char  size(1); Largest target is 21
   807                           ;		 -> STR_1(CODE[21]), 
   808                           ;strlen@s	PTR const unsigned char  size(1); Largest target is 21
   809                           ;		 -> STR_1(CODE[21]), 
   810                           ;strlen@cp	PTR const unsigned char  size(1); Largest target is 21
   811                           ;		 -> STR_1(CODE[21]), 
   812                           
   813                           
   814                           ;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   815                           
   816                           
   817                           ;Call graph:                      Base Space Used Autos Args Refs Density
   818                           ;_main                                                1    0  816   0.00
   819                           ;                                    3 BANK0    1
   820                           ;         _init_PORTD
   821                           ;         _allume_LCD
   822                           ;           _init_LCD
   823                           ;       _print_string
   824                           ;       _ecran_gauche
   825                           ;         _tempo_N_ms
   826                           ;  _ecran_gauche                                      0    0  180   0.00
   827                           ;  _ecriture_commande
   828                           ;  _print_string                                      3    0  381   0.00
   829                           ;                                    0 BANK0    3
   830                           ;         _print_char
   831                           ;             _strlen
   832                           ;  _init_LCD                                          0    0  204   0.00
   833                           ;         _tempo_N_ms
   834                           ;  _ecriture_commande
   835                           ;  _init_PORTD                                        0    0    0   0.00
   836                           ;  _allume_LCD                                        0    0    0   0.00
   837                           ;    _print_char                                      2    0  180   0.00
   838                           ;                                    6 COMMO    2
   839                           ;         _attente_bf
   840                           ;    _strlen                                          6    2   99   0.00
   841                           ;                                    0 COMMO    8
   842                           ;    _ecriture_commande                               2    0  180   0.00
   843                           ;                                    6 COMMO    2
   844                           ;         _attente_bf
   845                           ;      _attente_bf                                    1    0  132   0.00
   846                           ;                                    5 COMMO    1
   847                           ;   _lecture_commande
   848                           ;        _lecture_commande                            3    0  132   0.00
   849                           ;                                    2 COMMO    3
   850                           ;         _tempo_N_ms
   851                           ;          _tempo_N_ms                                0    2   24   0.00
   852                           ;                                    0 COMMO    2
   853                           ;         _tempo_1_ms
   854                           ;            _tempo_1_ms                              0    0    0   0.00
   855                           ; Estimated maximum call depth 6
   856                           ; Address spaces:
   857                           
   858                           ;Name               Size   Autos  Total    Cost      Usage
   859                           ;BITCOMMON            E      0       0       0        0.0%
   860                           ;CODE                 0      0       0       0        0.0%
   861                           ;NULL                 0      0       0       0        0.0%
   862                           ;COMMON               E      8       A       1       71.4%
   863                           ;SFR0                 0      0       0       1        0.0%
   864                           ;BITSFR0              0      0       0       1        0.0%
   865                           ;BITSFR1              0      0       0       2        0.0%
   866                           ;SFR1                 0      0       0       2        0.0%
   867                           ;ABS                  0      0       E       2        0.0%
   868                           ;STACK                0      0       0       3        0.0%
   869                           ;BITBANK0            50      0       0       4        0.0%
   870                           ;SFR3                 0      0       0       4        0.0%
   871                           ;BITSFR3              0      0       0       4        0.0%
   872                           ;BANK0               50      4       4       5        5.0%
   873                           ;BITSFR2              0      0       0       5        0.0%
   874                           ;SFR2                 0      0       0       5        0.0%
   875                           ;BITBANK1            50      0       0       6        0.0%
   876                           ;BANK1               50      0       0       7        0.0%
   877                           ;BITBANK3            60      0       0       8        0.0%
   878                           ;BANK3               60      0       0       9        0.0%
   879                           ;BITBANK2            60      0       0      10        0.0%
   880                           ;BANK2               60      0       0      11        0.0%
   881                           ;DATA                 0      0       E      12        0.0%
   882                           ;EEDATA             100      0       0    1000        0.0%
   883                           
   884                           	global	_main
   885                           psect	maintext,local,class=CODE,delta=2
   886                           global __pmaintext
   887  06E9                     __pmaintext:
   888                           
   889                           ; *************** function _main *****************
   890                           ; Defined at:
   891                           ;		line 19 in file "G:\test lcd\test lcd.c"
   892                           ; Parameters:    Size  Location     Type
   893                           ;		None
   894                           ; Auto vars:     Size  Location     Type
   895                           ;  message         1    3[BANK0 ] PTR unsigned char 
   896                           ;		 -> STR_1(21), 
   897                           ; Return value:  Size  Location     Type
   898                           ;		None               void
   899                           ; Registers used:
   900                           ;		wreg, status,2, status,0, pclath, cstack
   901                           ; Tracked objects:
   902                           ;		On entry : 17F/0
   903                           ;		On exit  : 0/0
   904                           ;		Unchanged: 0/0
   905                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906                           ;      Locals:         0       1       0       0       0
   907                           ;      Temp:     0
   908                           ;      Total:    1
   909                           ; This function calls:
   910                           ;		_init_PORTD
   911                           ;		_allume_LCD
   912                           ;		_init_LCD
   913                           ;		_print_string
   914                           ;		_ecran_gauche
   915                           ;		_tempo_N_ms
   916                           ; This function is called by:
   917                           ;		Startup code after reset
   918                           ; This function uses a non-reentrant model
   919                           ; 
   920                           psect	maintext
   921                           	file	"G:\test lcd\test lcd.c"
   922                           	line	19
   923                           	global	__size_of_main
   924  002B                     	__size_of_main	equ	__end_of_main-_main
   925                           ;test lcd.c: 15: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3FFE & 0x3FFB
                                  & 0x3FFF & 0x3F7F");
   926                           ;test lcd.c: 16: int i;
   927                           ;test lcd.c: 18: void main(void)
   928                           ;test lcd.c: 19: {
   929                           	
   930  06E9                     _main:	
   931                           	opt stack 7
   932                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   933                           	line	23
   934                           	
   935  06E9                     l30000829:	
   936                           ;test lcd.c: 23: init_PORTD();
   937  06E9  120A  118A  269D   	fcall	_init_PORTD
              120A  118A         
   938                           	line	26
   939                           ;test lcd.c: 26: allume_LCD();
   940  06EE  120A  118A  26AA   	fcall	_allume_LCD
              120A  118A         
   941                           	
   942  06F3                     l30000830:	
   943                           	line	30
   944                           ;test lcd.c: 30: init_LCD();
   945  06F3  120A  118A  27A3   	fcall	_init_LCD
              120A  118A         
   946                           	line	33
   947                           ;test lcd.c: 33: char *message ="Bonjour les instru  ";
   948  06F8  3001               	movlw	((STR_1-__stringbase))&0ffh
   949  06F9  1283               	bcf	status, 5	;RP0=0, select bank0
   950  06FA  1303               	bcf	status, 6	;RP1=0, select bank0
   951  06FB  00A3               	movwf	(main@message)
   952                           	
   953  06FC                     l30000831:	
   954                           	line	37
   955                           ;test lcd.c: 37: print_string(message);
   956  06FC  0823               	movf	(main@message),w
   957  06FD  120A  118A  273F   	fcall	_print_string
              120A  118A         
   958                           	
   959  0702                     l30000832:	
   960                           	line	41
   961                           ;test lcd.c: 40: {
   962                           ;test lcd.c: 41: ecran_gauche();
   963  0702  120A  118A  2696   	fcall	_ecran_gauche
              120A  118A         
   964                           	
   965  0707                     l30000833:	
   966                           	line	43
   967                           ;test lcd.c: 43: tempo_N_ms(500);
   968  0707  30F4               	movlw	low(01F4h)
   969  0708  00F0               	movwf	(?_tempo_N_ms)
   970  0709  3001               	movlw	high(01F4h)
   971  070A  00F1               	movwf	((?_tempo_N_ms))+1
   972  070B  120A  118A  2624   	fcall	_tempo_N_ms
              120A  118A         
   973  0710  2F02               	goto	l30000832
   974                           	global	start
   975  0711  120A  118A  2800   	ljmp	start
   976                           	opt stack 0
   977                           GLOBAL	__end_of_main
   978  0714                     	__end_of_main:
   979                           ; =============== function _main ends ============
   980                           
   981                           psect	maintext
   982                           	line	45
   983                           	signat	_main,88
   984                           	global	_ecran_gauche
   985                           psect	text95,local,class=CODE,delta=2
   986                           global __ptext95
   987  0696                     __ptext95:
   988                           
   989                           ; *************** function _ecran_gauche *****************
   990                           ; Defined at:
   991                           ;		line 295 in file "G:\test lcd\lcdbt.c"
   992                           ; Parameters:    Size  Location     Type
   993                           ;		None
   994                           ; Auto vars:     Size  Location     Type
   995                           ;		None
   996                           ; Return value:  Size  Location     Type
   997                           ;		None               void
   998                           ; Registers used:
   999                           ;		wreg, status,2, status,0, pclath, cstack
  1000                           ; Tracked objects:
  1001                           ;		On entry : 0/0
  1002                           ;		On exit  : 0/0
  1003                           ;		Unchanged: 0/0
  1004                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005                           ;      Locals:         0       0       0       0       0
  1006                           ;      Temp:     0
  1007                           ;      Total:    0
  1008                           ; This function calls:
  1009                           ;		_ecriture_commande
  1010                           ; This function is called by:
  1011                           ;		_main
  1012                           ; This function uses a non-reentrant model
  1013                           ; 
  1014                           psect	text95
  1015                           	file	"G:\test lcd\lcdbt.c"
  1016                           	line	295
  1017                           	global	__size_of_ecran_gauche
  1018  0007                     	__size_of_ecran_gauche	equ	__end_of_ecran_gauche-_ecran_gauche
  1019                           ;lcdbt.c: 294: void ecran_gauche(void)
  1020                           ;lcdbt.c: 295: {
  1021                           	
  1022  0696                     _ecran_gauche:	
  1023                           	opt stack 6
  1024                           ; Regs used in _ecran_gauche: [wreg+status,2+status,0+pclath+cstack]
  1025                           	line	298
  1026                           	
  1027  0696                     l30000834:	
  1028                           ;lcdbt.c: 298: ecriture_commande(0b00011000);
  1029  0696  3018               	movlw	(018h)
  1030  0697  120A  118A  2645   	fcall	_ecriture_commande
              120A  118A         
  1031                           	
  1032  069C                     l29:	
  1033  069C  0008               	return
  1034                           	opt stack 0
  1035                           GLOBAL	__end_of_ecran_gauche
  1036  069D                     	__end_of_ecran_gauche:
  1037                           ; =============== function _ecran_gauche ends ============
  1038                           
  1039                           psect	text96,local,class=CODE,delta=2
  1040                           global __ptext96
  1041  073F                     __ptext96:
  1042                           	line	299
  1043                           	signat	_ecran_gauche,88
  1044                           	global	_print_string
  1045                           
  1046                           ; *************** function _print_string *****************
  1047                           ; Defined at:
  1048                           ;		line 231 in file "G:\test lcd\lcdbt.c"
  1049                           ; Parameters:    Size  Location     Type
  1050                           ;  s               1    wreg     PTR unsigned char 
  1051                           ;		 -> STR_1(21), 
  1052                           ; Auto vars:     Size  Location     Type
  1053                           ;  s               1    0[BANK0 ] PTR unsigned char 
  1054                           ;		 -> STR_1(21), 
  1055                           ;  i               2    1[BANK0 ] int 
  1056                           ; Return value:  Size  Location     Type
  1057                           ;		None               void
  1058                           ; Registers used:
  1059                           ;		wreg, status,2, status,0, pclath, cstack
  1060                           ; Tracked objects:
  1061                           ;		On entry : 0/0
  1062                           ;		On exit  : 0/0
  1063                           ;		Unchanged: 0/0
  1064                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065                           ;      Locals:         0       3       0       0       0
  1066                           ;      Temp:     0
  1067                           ;      Total:    3
  1068                           ; This function calls:
  1069                           ;		_print_char
  1070                           ;		_strlen
  1071                           ; This function is called by:
  1072                           ;		_main
  1073                           ; This function uses a non-reentrant model
  1074                           ; 
  1075                           psect	text96
  1076                           	file	"G:\test lcd\lcdbt.c"
  1077                           	line	231
  1078                           	global	__size_of_print_string
  1079  002F                     	__size_of_print_string	equ	__end_of_print_string-_print_string
  1080                           ;lcdbt.c: 230: void print_string(char * s)
  1081                           ;lcdbt.c: 231: {
  1082                           	
  1083  073F                     _print_string:	
  1084                           	opt stack 6
  1085                           ; Regs used in _print_string: [wreg+status,2+status,0+pclath+cstack]
  1086                           ;print_string@s stored from wreg
  1087  073F  1283               	bcf	status, 5	;RP0=0, select bank0
  1088  0740  1303               	bcf	status, 6	;RP1=0, select bank0
  1089  0741  00A0               	movwf	(print_string@s)
  1090                           	
  1091  0742                     l30000835:	
  1092                           	line	232
  1093                           ;lcdbt.c: 232: for(int i=0 ; i < strlen(s) ; i++)
  1094  0742  3000               	movlw	low(0)
  1095  0743  00A1               	movwf	(print_string@i)
  1096  0744  3000               	movlw	high(0)
  1097  0745  00A2               	movwf	((print_string@i))+1
  1098  0746  2F5B               	goto	l30000838
  1099                           	
  1100  0747                     l30000836:	
  1101                           	line	234
  1102                           ;lcdbt.c: 233: {
  1103                           ;lcdbt.c: 234: print_char(s[i]);
  1104  0747  0820               	movf	(print_string@s),w
  1105  0748  0721               	addwf	(print_string@i),w
  1106                           	FNCALL _print_string,stringtab
  1107  0749  120A  118A  2609   	fcall	stringdir
              120A  118A         
  1108  074E  120A  118A  2664   	fcall	_print_char
              120A  118A         
  1109                           	
  1110  0753                     l30000837:	
  1111                           	line	232
  1112  0753  3001               	movlw	low(01h)
  1113  0754  1283               	bcf	status, 5	;RP0=0, select bank0
  1114  0755  1303               	bcf	status, 6	;RP1=0, select bank0
  1115  0756  07A1               	addwf	(print_string@i),f
  1116  0757  1803               	skipnc
  1117  0758  0AA2               	incf	(print_string@i+1),f
  1118  0759  3000               	movlw	high(01h)
  1119  075A  07A2               	addwf	(print_string@i+1),f
  1120                           	
  1121  075B                     l30000838:	
  1122  075B  0820               	movf	(print_string@s),w
  1123  075C  120A  118A  2714   	fcall	_strlen
              120A  118A         
  1124  0761  0877               	movf	(1+(?_strlen)),w
  1125  0762  1283               	bcf	status, 5	;RP0=0, select bank0
  1126  0763  1303               	bcf	status, 6	;RP1=0, select bank0
  1127  0764  0222               	subwf	(print_string@i+1),w
  1128  0765  1D03               	skipz
  1129  0766  2F69               	goto	u175
  1130  0767  0876               	movf	(0+(?_strlen)),w
  1131  0768  0221               	subwf	(print_string@i),w
  1132  0769                     u175:
  1133  0769  1C03               	skipc
  1134  076A  2F6C               	goto	u171
  1135  076B  2F6D               	goto	u170
  1136  076C                     u171:
  1137  076C  2F47               	goto	l30000836
  1138  076D                     u170:
  1139                           	
  1140  076D                     l19:	
  1141  076D  0008               	return
  1142                           	opt stack 0
  1143                           GLOBAL	__end_of_print_string
  1144  076E                     	__end_of_print_string:
  1145                           ; =============== function _print_string ends ============
  1146                           
  1147                           psect	text97,local,class=CODE,delta=2
  1148                           global __ptext97
  1149  07A3                     __ptext97:
  1150                           	line	236
  1151                           	signat	_print_string,4216
  1152                           	global	_init_LCD
  1153                           
  1154                           ; *************** function _init_LCD *****************
  1155                           ; Defined at:
  1156                           ;		line 160 in file "G:\test lcd\lcdbt.c"
  1157                           ; Parameters:    Size  Location     Type
  1158                           ;		None
  1159                           ; Auto vars:     Size  Location     Type
  1160                           ;		None
  1161                           ; Return value:  Size  Location     Type
  1162                           ;		None               void
  1163                           ; Registers used:
  1164                           ;		wreg, status,2, status,0, pclath, cstack
  1165                           ; Tracked objects:
  1166                           ;		On entry : 0/0
  1167                           ;		On exit  : 0/0
  1168                           ;		Unchanged: 0/0
  1169                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170                           ;      Locals:         0       0       0       0       0
  1171                           ;      Temp:     0
  1172                           ;      Total:    0
  1173                           ; This function calls:
  1174                           ;		_tempo_N_ms
  1175                           ;		_ecriture_commande
  1176                           ; This function is called by:
  1177                           ;		_main
  1178                           ; This function uses a non-reentrant model
  1179                           ; 
  1180                           psect	text97
  1181                           	file	"G:\test lcd\lcdbt.c"
  1182                           	line	160
  1183                           	global	__size_of_init_LCD
  1184  005D                     	__size_of_init_LCD	equ	__end_of_init_LCD-_init_LCD
  1185                           ;lcdbt.c: 159: void init_LCD(void)
  1186                           ;lcdbt.c: 160: {
  1187                           	
  1188  07A3                     _init_LCD:	
  1189                           	opt stack 6
  1190                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  1191                           	line	161
  1192                           	
  1193  07A3                     l30000839:	
  1194                           ;lcdbt.c: 161: tempo_N_ms(30);
  1195  07A3  301E               	movlw	low(01Eh)
  1196  07A4  00F0               	movwf	(?_tempo_N_ms)
  1197  07A5  3000               	movlw	high(01Eh)
  1198  07A6  00F1               	movwf	((?_tempo_N_ms))+1
  1199  07A7  120A  118A  2624   	fcall	_tempo_N_ms
              120A  118A         
  1200                           	
  1201  07AC                     l30000840:	
  1202                           	line	162
  1203                           ;lcdbt.c: 162: TRISD=0x00;
  1204  07AC  1003               	clrc
  1205  07AD  3000               	movlw	0
  1206  07AE  1803               	btfsc	status,0
  1207  07AF  3001               	movlw	1
  1208  07B0  1683               	bsf	status, 5	;RP0=1, select bank1
  1209  07B1  1303               	bcf	status, 6	;RP1=0, select bank1
  1210  07B2  0088               	movwf	(136)^080h	;volatile
  1211                           	
  1212  07B3                     l30000841:	
  1213                           	line	163
  1214                           ;lcdbt.c: 163: RD7=1;
  1215  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1216  07B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1217  07B5  1788               	bsf	(71/8),(71)&7
  1218                           	
  1219  07B6                     l30000842:	
  1220                           	line	164
  1221                           ;lcdbt.c: 164: RD4=0;
  1222  07B6  1208               	bcf	(68/8),(68)&7
  1223                           	
  1224  07B7                     l30000843:	
  1225                           	line	165
  1226                           ;lcdbt.c: 165: RD6=0;
  1227  07B7  1308               	bcf	(70/8),(70)&7
  1228                           	
  1229  07B8                     l30000844:	
  1230                           	line	166
  1231                           ;lcdbt.c: 166: RD5=0;
  1232  07B8  1288               	bcf	(69/8),(69)&7
  1233                           	
  1234  07B9                     l30000845:	
  1235                           	line	168
  1236                           ;lcdbt.c: 168: PORTD=PORTD|0x03;
  1237  07B9  0808               	movf	(8),w	;volatile
  1238  07BA  3803               	iorlw	03h
  1239  07BB  0088               	movwf	(8)	;volatile
  1240                           	
  1241  07BC                     l30000846:	
  1242                           	line	169
  1243                           ;lcdbt.c: 169: RD6=1;
  1244  07BC  1708               	bsf	(70/8),(70)&7
  1245                           	
  1246  07BD                     l30000847:	
  1247                           	line	170
  1248                           ;lcdbt.c: 170: RD6=0;
  1249  07BD  1308               	bcf	(70/8),(70)&7
  1250                           	
  1251  07BE                     l30000848:	
  1252                           	line	171
  1253                           ;lcdbt.c: 171: tempo_N_ms(30);
  1254  07BE  301E               	movlw	low(01Eh)
  1255  07BF  00F0               	movwf	(?_tempo_N_ms)
  1256  07C0  3000               	movlw	high(01Eh)
  1257  07C1  00F1               	movwf	((?_tempo_N_ms))+1
  1258  07C2  120A  118A  2624   	fcall	_tempo_N_ms
              120A  118A         
  1259                           	
  1260  07C7                     l30000849:	
  1261                           	line	174
  1262                           ;lcdbt.c: 174: PORTD=PORTD|0x03;
  1263  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1264  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1265  07C9  0808               	movf	(8),w	;volatile
  1266  07CA  3803               	iorlw	03h
  1267  07CB  0088               	movwf	(8)	;volatile
  1268                           	
  1269  07CC                     l30000850:	
  1270                           	line	175
  1271                           ;lcdbt.c: 175: RD6=1;
  1272  07CC  1708               	bsf	(70/8),(70)&7
  1273                           	
  1274  07CD                     l30000851:	
  1275                           	line	176
  1276                           ;lcdbt.c: 176: RD6=0;
  1277  07CD  1308               	bcf	(70/8),(70)&7
  1278                           	
  1279  07CE                     l30000852:	
  1280                           	line	177
  1281                           ;lcdbt.c: 177: tempo_N_ms(30);
  1282  07CE  301E               	movlw	low(01Eh)
  1283  07CF  00F0               	movwf	(?_tempo_N_ms)
  1284  07D0  3000               	movlw	high(01Eh)
  1285  07D1  00F1               	movwf	((?_tempo_N_ms))+1
  1286  07D2  120A  118A  2624   	fcall	_tempo_N_ms
              120A  118A         
  1287                           	
  1288  07D7                     l30000853:	
  1289                           	line	180
  1290                           ;lcdbt.c: 180: PORTD=PORTD|0x03;
  1291  07D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1292  07D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1293  07D9  0808               	movf	(8),w	;volatile
  1294  07DA  3803               	iorlw	03h
  1295  07DB  0088               	movwf	(8)	;volatile
  1296                           	
  1297  07DC                     l30000854:	
  1298                           	line	181
  1299                           ;lcdbt.c: 181: RD6=1;
  1300  07DC  1708               	bsf	(70/8),(70)&7
  1301                           	
  1302  07DD                     l30000855:	
  1303                           	line	182
  1304                           ;lcdbt.c: 182: RD6=0;
  1305  07DD  1308               	bcf	(70/8),(70)&7
  1306                           	
  1307  07DE                     l30000856:	
  1308                           	line	183
  1309                           ;lcdbt.c: 183: tempo_N_ms(30);
  1310  07DE  301E               	movlw	low(01Eh)
  1311  07DF  00F0               	movwf	(?_tempo_N_ms)
  1312  07E0  3000               	movlw	high(01Eh)
  1313  07E1  00F1               	movwf	((?_tempo_N_ms))+1
  1314  07E2  120A  118A  2624   	fcall	_tempo_N_ms
              120A  118A         
  1315                           	
  1316  07E7                     l30000857:	
  1317                           	line	188
  1318                           ;lcdbt.c: 188: ecriture_commande(0x28);
  1319  07E7  3028               	movlw	(028h)
  1320  07E8  120A  118A  2645   	fcall	_ecriture_commande
              120A  118A         
  1321                           	
  1322  07ED                     l30000858:	
  1323                           	line	191
  1324                           ;lcdbt.c: 191: ecriture_commande(0x0F);
  1325  07ED  300F               	movlw	(0Fh)
  1326  07EE  120A  118A  2645   	fcall	_ecriture_commande
              120A  118A         
  1327                           	
  1328  07F3                     l30000859:	
  1329                           	line	194
  1330                           ;lcdbt.c: 194: ecriture_commande(0x01);
  1331  07F3  3001               	movlw	(01h)
  1332  07F4  120A  118A  2645   	fcall	_ecriture_commande
              120A  118A         
  1333                           	
  1334  07F9                     l30000860:	
  1335                           	line	199
  1336                           ;lcdbt.c: 199: ecriture_commande(0x06);
  1337  07F9  3006               	movlw	(06h)
  1338  07FA  120A  118A  2645   	fcall	_ecriture_commande
              120A  118A         
  1339                           	
  1340  07FF                     l17:	
  1341  07FF  0008               	return
  1342                           	opt stack 0
  1343                           GLOBAL	__end_of_init_LCD
  1344  0800                     	__end_of_init_LCD:
  1345                           ; =============== function _init_LCD ends ============
  1346                           
  1347                           psect	text98,local,class=CODE,delta=2
  1348                           global __ptext98
  1349  069D                     __ptext98:
  1350                           	line	200
  1351                           	signat	_init_LCD,88
  1352                           	global	_init_PORTD
  1353                           
  1354                           ; *************** function _init_PORTD *****************
  1355                           ; Defined at:
  1356                           ;		line 85 in file "G:\test lcd\lcdbt.c"
  1357                           ; Parameters:    Size  Location     Type
  1358                           ;		None
  1359                           ; Auto vars:     Size  Location     Type
  1360                           ;		None
  1361                           ; Return value:  Size  Location     Type
  1362                           ;		None               void
  1363                           ; Registers used:
  1364                           ;		None
  1365                           ; Tracked objects:
  1366                           ;		On entry : 0/0
  1367                           ;		On exit  : 0/0
  1368                           ;		Unchanged: 0/0
  1369                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370                           ;      Locals:         0       0       0       0       0
  1371                           ;      Temp:     0
  1372                           ;      Total:    0
  1373                           ; This function calls:
  1374                           ;		Nothing
  1375                           ; This function is called by:
  1376                           ;		_main
  1377                           ; This function uses a non-reentrant model
  1378                           ; 
  1379                           psect	text98
  1380                           	file	"G:\test lcd\lcdbt.c"
  1381                           	line	85
  1382                           	global	__size_of_init_PORTD
  1383  0007                     	__size_of_init_PORTD	equ	__end_of_init_PORTD-_init_PORTD
  1384                           ;lcdbt.c: 84: void init_PORTD(void)
  1385                           ;lcdbt.c: 85: {
  1386                           	
  1387  069D                     _init_PORTD:	
  1388                           	opt stack 6
  1389                           ; Regs used in _init_PORTD: []
  1390                           	line	86
  1391                           	
  1392  069D                     l30000861:	
  1393                           ;lcdbt.c: 86: TRISD4 =0;
  1394  069D  1683               	bsf	status, 5	;RP0=1, select bank1
  1395  069E  1303               	bcf	status, 6	;RP1=0, select bank1
  1396  069F  1208               	bcf	(1092/8)^080h,(1092)&7
  1397                           	line	87
  1398                           ;lcdbt.c: 87: TRISD5 =0;
  1399  06A0  1288               	bcf	(1093/8)^080h,(1093)&7
  1400                           	line	88
  1401                           ;lcdbt.c: 88: TRISD6 =0;
  1402  06A1  1308               	bcf	(1094/8)^080h,(1094)&7
  1403                           	line	89
  1404                           ;lcdbt.c: 89: TRISD7 =0;
  1405  06A2  1388               	bcf	(1095/8)^080h,(1095)&7
  1406                           	
  1407  06A3                     l9:	
  1408  06A3  0008               	return
  1409                           	opt stack 0
  1410                           GLOBAL	__end_of_init_PORTD
  1411  06A4                     	__end_of_init_PORTD:
  1412                           ; =============== function _init_PORTD ends ============
  1413                           
  1414                           psect	text99,local,class=CODE,delta=2
  1415                           global __ptext99
  1416  06AA                     __ptext99:
  1417                           	line	90
  1418                           	signat	_init_PORTD,88
  1419                           	global	_allume_LCD
  1420                           
  1421                           ; *************** function _allume_LCD *****************
  1422                           ; Defined at:
  1423                           ;		line 96 in file "G:\test lcd\lcdbt.c"
  1424                           ; Parameters:    Size  Location     Type
  1425                           ;		None
  1426                           ; Auto vars:     Size  Location     Type
  1427                           ;		None
  1428                           ; Return value:  Size  Location     Type
  1429                           ;		None               void
  1430                           ; Registers used:
  1431                           ;		None
  1432                           ; Tracked objects:
  1433                           ;		On entry : 0/0
  1434                           ;		On exit  : 0/0
  1435                           ;		Unchanged: 0/0
  1436                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437                           ;      Locals:         0       0       0       0       0
  1438                           ;      Temp:     0
  1439                           ;      Total:    0
  1440                           ; This function calls:
  1441                           ;		Nothing
  1442                           ; This function is called by:
  1443                           ;		_main
  1444                           ; This function uses a non-reentrant model
  1445                           ; 
  1446                           psect	text99
  1447                           	file	"G:\test lcd\lcdbt.c"
  1448                           	line	96
  1449                           	global	__size_of_allume_LCD
  1450  0004                     	__size_of_allume_LCD	equ	__end_of_allume_LCD-_allume_LCD
  1451                           ;lcdbt.c: 95: void allume_LCD(void)
  1452                           ;lcdbt.c: 96: {
  1453                           	
  1454  06AA                     _allume_LCD:	
  1455                           	opt stack 6
  1456                           ; Regs used in _allume_LCD: []
  1457                           	line	98
  1458                           	
  1459  06AA                     l30000862:	
  1460                           ;lcdbt.c: 98: RD7 =1;
  1461  06AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1462  06AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1463  06AC  1788               	bsf	(71/8),(71)&7
  1464                           	
  1465  06AD                     l10:	
  1466  06AD  0008               	return
  1467                           	opt stack 0
  1468                           GLOBAL	__end_of_allume_LCD
  1469  06AE                     	__end_of_allume_LCD:
  1470                           ; =============== function _allume_LCD ends ============
  1471                           
  1472                           psect	text100,local,class=CODE,delta=2
  1473                           global __ptext100
  1474  0664                     __ptext100:
  1475                           	line	99
  1476                           	signat	_allume_LCD,88
  1477                           	global	_print_char
  1478                           
  1479                           ; *************** function _print_char *****************
  1480                           ; Defined at:
  1481                           ;		line 207 in file "G:\test lcd\lcdbt.c"
  1482                           ; Parameters:    Size  Location     Type
  1483                           ;  car             1    wreg     unsigned char 
  1484                           ; Auto vars:     Size  Location     Type
  1485                           ;  car             1    7[COMMON] unsigned char 
  1486                           ; Return value:  Size  Location     Type
  1487                           ;		None               void
  1488                           ; Registers used:
  1489                           ;		wreg, status,2, status,0, pclath, cstack
  1490                           ; Tracked objects:
  1491                           ;		On entry : 0/0
  1492                           ;		On exit  : 0/0
  1493                           ;		Unchanged: 0/0
  1494                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495                           ;      Locals:         2       0       0       0       0
  1496                           ;      Temp:     1
  1497                           ;      Total:    2
  1498                           ; This function calls:
  1499                           ;		_attente_bf
  1500                           ; This function is called by:
  1501                           ;		_print_string
  1502                           ; This function uses a non-reentrant model
  1503                           ; 
  1504                           psect	text100
  1505                           	file	"G:\test lcd\lcdbt.c"
  1506                           	line	207
  1507                           	global	__size_of_print_char
  1508  001F                     	__size_of_print_char	equ	__end_of_print_char-_print_char
  1509                           ;lcdbt.c: 206: void print_char(char car)
  1510                           ;lcdbt.c: 207: {
  1511                           	
  1512  0664                     _print_char:	
  1513                           	opt stack 5
  1514                           ; Regs used in _print_char: [wreg+status,2+status,0+pclath+cstack]
  1515                           ;print_char@car stored from wreg
  1516                           	line	209
  1517  0664  00F7               	movwf	(print_char@car)
  1518                           	
  1519  0665                     l30000863:	
  1520                           ;lcdbt.c: 209: attente_bf();
  1521  0665  120A  118A  2683   	fcall	_attente_bf
              120A  118A         
  1522                           	
  1523  066A                     l30000864:	
  1524                           	line	210
  1525                           ;lcdbt.c: 210: RD5=0;
  1526  066A  1283               	bcf	status, 5	;RP0=0, select bank0
  1527  066B  1303               	bcf	status, 6	;RP1=0, select bank0
  1528  066C  1288               	bcf	(69/8),(69)&7
  1529                           	
  1530  066D                     l30000865:	
  1531                           	line	211
  1532                           ;lcdbt.c: 211: RD4=1;
  1533  066D  1608               	bsf	(68/8),(68)&7
  1534                           	
  1535  066E                     l30000866:	
  1536                           	line	212
  1537                           ;lcdbt.c: 212: PORTD=((car>>4)&0x0F)|0x90;
  1538  066E  0877               	movf	(print_char@car),w
  1539  066F  00F6               	movwf	(??_print_char+0+0)
  1540  0670  3004               	movlw	04h
  1541  0671                     u185:
  1542  0671  1003               	clrc
  1543  0672  0CF6               	rrf	(??_print_char+0+0),f
  1544  0673  3EFF               	addlw	-1
  1545  0674  1D03               	skipz
  1546  0675  2E71               	goto	u185
  1547  0676  0876               	movf	0+(??_print_char+0+0),w
  1548  0677  390F               	andlw	0Fh
  1549  0678  3890               	iorlw	090h
  1550  0679  0088               	movwf	(8)	;volatile
  1551                           	
  1552  067A                     l30000867:	
  1553                           	line	216
  1554                           ;lcdbt.c: 216: RD6=1;
  1555  067A  1708               	bsf	(70/8),(70)&7
  1556                           	
  1557  067B                     l30000868:	
  1558                           	line	217
  1559                           ;lcdbt.c: 217: RD6=0;
  1560  067B  1308               	bcf	(70/8),(70)&7
  1561                           	
  1562  067C                     l30000869:	
  1563                           	line	219
  1564                           ;lcdbt.c: 219: PORTD=(car&0x0F)|0x90;
  1565  067C  0877               	movf	(print_char@car),w
  1566  067D  390F               	andlw	0Fh
  1567  067E  3890               	iorlw	090h
  1568  067F  0088               	movwf	(8)	;volatile
  1569                           	
  1570  0680                     l30000870:	
  1571                           	line	221
  1572                           ;lcdbt.c: 221: RD6=1;
  1573  0680  1708               	bsf	(70/8),(70)&7
  1574                           	
  1575  0681                     l30000871:	
  1576                           	line	222
  1577                           ;lcdbt.c: 222: RD6=0;
  1578  0681  1308               	bcf	(70/8),(70)&7
  1579                           	
  1580  0682                     l18:	
  1581  0682  0008               	return
  1582                           	opt stack 0
  1583                           GLOBAL	__end_of_print_char
  1584  0683                     	__end_of_print_char:
  1585                           ; =============== function _print_char ends ============
  1586                           
  1587                           psect	text101,local,class=CODE,delta=2
  1588                           global __ptext101
  1589  0714                     __ptext101:
  1590                           	line	223
  1591                           	signat	_print_char,4216
  1592                           	global	_strlen
  1593                           
  1594                           ; *************** function _strlen *****************
  1595                           ; Defined at:
  1596                           ;		line 5 in file "../../common/strlen.c"
  1597                           ; Parameters:    Size  Location     Type
  1598                           ;  s               1    wreg     PTR const unsigned char 
  1599                           ;		 -> STR_1(21), 
  1600                           ; Auto vars:     Size  Location     Type
  1601                           ;  s               1    4[COMMON] PTR const unsigned char 
  1602                           ;		 -> STR_1(21), 
  1603                           ;  cp              1    5[COMMON] PTR const unsigned char 
  1604                           ;		 -> STR_1(21), 
  1605                           ; Return value:  Size  Location     Type
  1606                           ;                  2    6[COMMON] unsigned int 
  1607                           ; Registers used:
  1608                           ;		wreg, status,2, status,0, pclath
  1609                           ; Tracked objects:
  1610                           ;		On entry : 0/0
  1611                           ;		On exit  : 0/0
  1612                           ;		Unchanged: 0/0
  1613                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614                           ;      Locals:         8       0       0       0       0
  1615                           ;      Temp:     4
  1616                           ;      Total:    8
  1617                           ; This function calls:
  1618                           ;		Nothing
  1619                           ; This function is called by:
  1620                           ;		_print_string
  1621                           ; This function uses a non-reentrant model
  1622                           ; 
  1623                           psect	text101
  1624                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\strlen.c"
  1625                           	line	5
  1626                           	global	__size_of_strlen
  1627  002B                     	__size_of_strlen	equ	__end_of_strlen-_strlen
  1628                           	
  1629  0714                     _strlen:	
  1630                           	opt stack 5
  1631                           ; Regs used in _strlen: [wreg+status,2+status,0+pclath]
  1632                           ;strlen@s stored from wreg
  1633                           	line	8
  1634  0714  00F4               	movwf	(strlen@s)
  1635                           	
  1636  0715                     l30000872:	
  1637  0715  0874               	movf	(strlen@s),w
  1638  0716  00F5               	movwf	(strlen@cp)
  1639                           	
  1640  0717                     l30000873:	
  1641                           	line	9
  1642  0717  0100               	clrw
  1643  0718  3801               	iorlw	01h
  1644  0719  07F5               	addwf	(strlen@cp),f
  1645  071A  0100               	clrw
  1646  071B  38FF               	iorlw	-01h
  1647  071C  0775               	addwf	(strlen@cp),w
  1648                           	FNCALL _strlen,stringtab
  1649  071D  120A  118A  2609   	fcall	stringdir
              120A  118A         
  1650  0722  3800               	iorlw	0
  1651  0723  1D03               	skipz
  1652  0724  2F26               	goto	u191
  1653  0725  2F27               	goto	u190
  1654  0726                     u191:
  1655  0726  2F17               	goto	l30000873
  1656  0727                     u190:
  1657                           	
  1658  0727                     l30000874:	
  1659                           	line	11
  1660  0727  0874               	movf	(strlen@s),w
  1661  0728  00F0               	movwf	(??_strlen+0+0)
  1662  0729  01F1               	clrf	(??_strlen+0+0+1)
  1663  072A  09F0               	comf	(??_strlen+0+0),f
  1664  072B  09F1               	comf	(??_strlen+0+1),f
  1665  072C  0AF0               	incf	(??_strlen+0+0),f
  1666  072D  1903               	skipnz
  1667  072E  0AF1               	incf	(??_strlen+0+1),f
  1668  072F  0875               	movf	(strlen@cp),w
  1669  0730  0770               	addwf	0+(??_strlen+0+0),w
  1670  0731  00F2               	movwf	(??_strlen+2+0)
  1671  0732  0871               	movf	1+(??_strlen+0+0),w
  1672  0733  1803               	skipnc
  1673  0734  0A71               	incf	1+(??_strlen+0+0),w
  1674  0735  00F3               	movwf	((??_strlen+2+0))+1
  1675  0736  0872               	movf	0+(??_strlen+2+0),w
  1676  0737  3EFF               	addlw	low(-1)
  1677  0738  00F6               	movwf	(?_strlen)
  1678  0739  0873               	movf	1+(??_strlen+2+0),w
  1679  073A  1803               	skipnc
  1680  073B  3E01               	addlw	1
  1681  073C  3EFF               	addlw	high(-1)
  1682  073D  00F7               	movwf	1+(?_strlen)
  1683                           	
  1684  073E                     l39:	
  1685  073E  0008               	return
  1686                           	opt stack 0
  1687                           GLOBAL	__end_of_strlen
  1688  073F                     	__end_of_strlen:
  1689                           ; =============== function _strlen ends ============
  1690                           
  1691                           psect	text102,local,class=CODE,delta=2
  1692                           global __ptext102
  1693  0645                     __ptext102:
  1694                           	line	12
  1695                           	signat	_strlen,4218
  1696                           	global	_ecriture_commande
  1697                           
  1698                           ; *************** function _ecriture_commande *****************
  1699                           ; Defined at:
  1700                           ;		line 140 in file "G:\test lcd\lcdbt.c"
  1701                           ; Parameters:    Size  Location     Type
  1702                           ;  commande        1    wreg     unsigned char 
  1703                           ; Auto vars:     Size  Location     Type
  1704                           ;  commande        1    7[COMMON] unsigned char 
  1705                           ; Return value:  Size  Location     Type
  1706                           ;		None               void
  1707                           ; Registers used:
  1708                           ;		wreg, status,2, status,0, pclath, cstack
  1709                           ; Tracked objects:
  1710                           ;		On entry : 0/0
  1711                           ;		On exit  : 0/0
  1712                           ;		Unchanged: 0/0
  1713                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714                           ;      Locals:         2       0       0       0       0
  1715                           ;      Temp:     1
  1716                           ;      Total:    2
  1717                           ; This function calls:
  1718                           ;		_attente_bf
  1719                           ; This function is called by:
  1720                           ;		_init_LCD
  1721                           ;		_ecran_gauche
  1722                           ; This function uses a non-reentrant model
  1723                           ; 
  1724                           psect	text102
  1725                           	file	"G:\test lcd\lcdbt.c"
  1726                           	line	140
  1727                           	global	__size_of_ecriture_commande
  1728  001F                     	__size_of_ecriture_commande	equ	__end_of_ecriture_commande-_ecriture_commande
  1729                           ;lcdbt.c: 139: void ecriture_commande(char commande)
  1730                           ;lcdbt.c: 140: {
  1731                           	
  1732  0645                     _ecriture_commande:	
  1733                           	opt stack 5
  1734                           ; Regs used in _ecriture_commande: [wreg+status,2+status,0+pclath+cstack]
  1735                           ;ecriture_commande@commande stored from wreg
  1736  0645  00F7               	movwf	(ecriture_commande@commande)
  1737                           	
  1738  0646                     l30000876:	
  1739                           	line	141
  1740                           ;lcdbt.c: 141: attente_bf();
  1741  0646  120A  118A  2683   	fcall	_attente_bf
              120A  118A         
  1742                           	
  1743  064B                     l30000877:	
  1744                           	line	142
  1745                           ;lcdbt.c: 142: RD5=0;
  1746  064B  1283               	bcf	status, 5	;RP0=0, select bank0
  1747  064C  1303               	bcf	status, 6	;RP1=0, select bank0
  1748  064D  1288               	bcf	(69/8),(69)&7
  1749                           	
  1750  064E                     l30000878:	
  1751                           	line	143
  1752                           ;lcdbt.c: 143: RD4=0;
  1753  064E  1208               	bcf	(68/8),(68)&7
  1754                           	
  1755  064F                     l30000879:	
  1756                           	line	144
  1757                           ;lcdbt.c: 144: PORTD=((commande>>4)&0x0F)|0x80;
  1758  064F  0877               	movf	(ecriture_commande@commande),w
  1759  0650  00F6               	movwf	(??_ecriture_commande+0+0)
  1760  0651  3004               	movlw	04h
  1761  0652                     u205:
  1762  0652  1003               	clrc
  1763  0653  0CF6               	rrf	(??_ecriture_commande+0+0),f
  1764  0654  3EFF               	addlw	-1
  1765  0655  1D03               	skipz
  1766  0656  2E52               	goto	u205
  1767  0657  0876               	movf	0+(??_ecriture_commande+0+0),w
  1768  0658  390F               	andlw	0Fh
  1769  0659  3880               	iorlw	080h
  1770  065A  0088               	movwf	(8)	;volatile
  1771                           	
  1772  065B                     l30000880:	
  1773                           	line	146
  1774                           ;lcdbt.c: 146: RD6=1;
  1775  065B  1708               	bsf	(70/8),(70)&7
  1776                           	
  1777  065C                     l30000881:	
  1778                           	line	147
  1779                           ;lcdbt.c: 147: RD6=0;
  1780  065C  1308               	bcf	(70/8),(70)&7
  1781                           	
  1782  065D                     l30000882:	
  1783                           	line	149
  1784                           ;lcdbt.c: 149: PORTD=(commande&0x0F)|0x80;
  1785  065D  0877               	movf	(ecriture_commande@commande),w
  1786  065E  390F               	andlw	0Fh
  1787  065F  3880               	iorlw	080h
  1788  0660  0088               	movwf	(8)	;volatile
  1789                           	
  1790  0661                     l30000883:	
  1791                           	line	151
  1792                           ;lcdbt.c: 151: RD6=1;
  1793  0661  1708               	bsf	(70/8),(70)&7
  1794                           	
  1795  0662                     l30000884:	
  1796                           	line	152
  1797                           ;lcdbt.c: 152: RD6=0;
  1798  0662  1308               	bcf	(70/8),(70)&7
  1799                           	
  1800  0663                     l16:	
  1801  0663  0008               	return
  1802                           	opt stack 0
  1803                           GLOBAL	__end_of_ecriture_commande
  1804  0664                     	__end_of_ecriture_commande:
  1805                           ; =============== function _ecriture_commande ends ============
  1806                           
  1807                           psect	text103,local,class=CODE,delta=2
  1808                           global __ptext103
  1809  0683                     __ptext103:
  1810                           	line	153
  1811                           	signat	_ecriture_commande,4216
  1812                           	global	_attente_bf
  1813                           
  1814                           ; *************** function _attente_bf *****************
  1815                           ; Defined at:
  1816                           ;		line 131 in file "G:\test lcd\lcdbt.c"
  1817                           ; Parameters:    Size  Location     Type
  1818                           ;		None
  1819                           ; Auto vars:     Size  Location     Type
  1820                           ;		None
  1821                           ; Return value:  Size  Location     Type
  1822                           ;		None               void
  1823                           ; Registers used:
  1824                           ;		wreg, status,2, status,0, pclath, cstack
  1825                           ; Tracked objects:
  1826                           ;		On entry : 0/0
  1827                           ;		On exit  : 0/0
  1828                           ;		Unchanged: 0/0
  1829                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830                           ;      Locals:         1       0       0       0       0
  1831                           ;      Temp:     1
  1832                           ;      Total:    1
  1833                           ; This function calls:
  1834                           ;		_lecture_commande
  1835                           ; This function is called by:
  1836                           ;		_ecriture_commande
  1837                           ;		_print_char
  1838                           ; This function uses a non-reentrant model
  1839                           ; 
  1840                           psect	text103
  1841                           	file	"G:\test lcd\lcdbt.c"
  1842                           	line	131
  1843                           	global	__size_of_attente_bf
  1844  000B                     	__size_of_attente_bf	equ	__end_of_attente_bf-_attente_bf
  1845                           ;lcdbt.c: 130: void attente_bf(void)
  1846                           ;lcdbt.c: 131: {
  1847                           	
  1848  0683                     _attente_bf:	
  1849                           	opt stack 4
  1850                           ; Regs used in _attente_bf: [wreg+status,2+status,0+pclath+cstack]
  1851                           	
  1852  0683                     l30000885:	
  1853                           	
  1854  0683                     l30000886:	
  1855                           	line	132
  1856  0683  120A  118A  276E   	fcall	_lecture_commande
              120A  118A         
  1857  0688  00F5               	movwf	(??_attente_bf+0+0)
  1858  0689  1BF5               	btfsc	0+(??_attente_bf+0+0),(7)&7
  1859  068A  2E8C               	goto	u211
  1860  068B  2E8D               	goto	u210
  1861  068C                     u211:
  1862  068C  2E83               	goto	l30000886
  1863  068D                     u210:
  1864                           	
  1865  068D                     l12:	
  1866  068D  0008               	return
  1867                           	opt stack 0
  1868                           GLOBAL	__end_of_attente_bf
  1869  068E                     	__end_of_attente_bf:
  1870                           ; =============== function _attente_bf ends ============
  1871                           
  1872                           psect	text104,local,class=CODE,delta=2
  1873                           global __ptext104
  1874  076E                     __ptext104:
  1875                           	line	133
  1876                           	signat	_attente_bf,88
  1877                           	global	_lecture_commande
  1878                           
  1879                           ; *************** function _lecture_commande *****************
  1880                           ; Defined at:
  1881                           ;		line 107 in file "G:\test lcd\lcdbt.c"
  1882                           ; Parameters:    Size  Location     Type
  1883                           ;		None
  1884                           ; Auto vars:     Size  Location     Type
  1885                           ;  quartet_comm    1    3[COMMON] unsigned char 
  1886                           ;  commande        1    4[COMMON] unsigned char 
  1887                           ; Return value:  Size  Location     Type
  1888                           ;                  1    wreg      unsigned char 
  1889                           ; Registers used:
  1890                           ;		wreg, status,2, status,0, pclath, cstack
  1891                           ; Tracked objects:
  1892                           ;		On entry : 0/0
  1893                           ;		On exit  : 0/0
  1894                           ;		Unchanged: 0/0
  1895                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896                           ;      Locals:         3       0       0       0       0
  1897                           ;      Temp:     1
  1898                           ;      Total:    3
  1899                           ; This function calls:
  1900                           ;		_tempo_N_ms
  1901                           ; This function is called by:
  1902                           ;		_attente_bf
  1903                           ; This function uses a non-reentrant model
  1904                           ; 
  1905                           psect	text104
  1906                           	file	"G:\test lcd\lcdbt.c"
  1907                           	line	107
  1908                           	global	__size_of_lecture_commande
  1909  0035                     	__size_of_lecture_commande	equ	__end_of_lecture_commande-_lecture_commande
  1910                           ;lcdbt.c: 106: unsigned char lecture_commande (void)
  1911                           ;lcdbt.c: 107: {
  1912                           	
  1913  076E                     _lecture_commande:	
  1914                           	opt stack 3
  1915                           ; Regs used in _lecture_commande: [wreg+status,2+status,0+pclath+cstack]
  1916                           	line	109
  1917                           	
  1918  076E                     l30000887:	
  1919                           ;lcdbt.c: 108: unsigned char commande, quartet_commande;
  1920                           ;lcdbt.c: 109: TRISD=0x0F;
  1921  076E  300F               	movlw	(0Fh)
  1922  076F  1683               	bsf	status, 5	;RP0=1, select bank1
  1923  0770  1303               	bcf	status, 6	;RP1=0, select bank1
  1924  0771  0088               	movwf	(136)^080h	;volatile
  1925                           	
  1926  0772                     l30000888:	
  1927                           	line	110
  1928                           ;lcdbt.c: 110: RD5=1;
  1929  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  1930  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  1931  0774  1688               	bsf	(69/8),(69)&7
  1932                           	
  1933  0775                     l30000889:	
  1934                           	line	111
  1935                           ;lcdbt.c: 111: RD4=0;
  1936  0775  1208               	bcf	(68/8),(68)&7
  1937                           	
  1938  0776                     l30000890:	
  1939                           	line	112
  1940                           ;lcdbt.c: 112: tempo_N_ms(2);
  1941  0776  3002               	movlw	low(02h)
  1942  0777  00F0               	movwf	(?_tempo_N_ms)
  1943  0778  3000               	movlw	high(02h)
  1944  0779  00F1               	movwf	((?_tempo_N_ms))+1
  1945  077A  120A  118A  2624   	fcall	_tempo_N_ms
              120A  118A         
  1946                           	
  1947  077F                     l30000891:	
  1948                           	line	113
  1949                           ;lcdbt.c: 113: RD6=1;
  1950  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  1951  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  1952  0781  1708               	bsf	(70/8),(70)&7
  1953                           	
  1954  0782                     l30000892:	
  1955                           	line	114
  1956                           ;lcdbt.c: 114: quartet_commande=PORTD;
  1957  0782  0808               	movf	(8),w	;volatile
  1958  0783  00F3               	movwf	(lecture_commande@quartet_commande)
  1959                           	
  1960  0784                     l30000893:	
  1961                           	line	115
  1962                           ;lcdbt.c: 115: commande=((quartet_commande<<4)& 0xF0);
  1963  0784  0873               	movf	(lecture_commande@quartet_commande),w
  1964  0785  00F2               	movwf	(??_lecture_commande+0+0)
  1965  0786  3003               	movlw	(04h)-1
  1966  0787                     u225:
  1967  0787  1003               	clrc
  1968  0788  0DF2               	rlf	(??_lecture_commande+0+0),f
  1969  0789  3EFF               	addlw	-1
  1970  078A  1D03               	skipz
  1971  078B  2F87               	goto	u225
  1972  078C  1003               	clrc
  1973  078D  0D72               	rlf	(??_lecture_commande+0+0),w
  1974  078E  39F0               	andlw	0F0h
  1975  078F  00F4               	movwf	(lecture_commande@commande)
  1976                           	
  1977  0790                     l30000894:	
  1978                           	line	116
  1979                           ;lcdbt.c: 116: RD6=0;
  1980  0790  1308               	bcf	(70/8),(70)&7
  1981                           	
  1982  0791                     l30000895:	
  1983                           	line	117
  1984                           ;lcdbt.c: 117: RD6=1;
  1985  0791  1708               	bsf	(70/8),(70)&7
  1986                           	
  1987  0792                     l30000896:	
  1988                           	line	118
  1989                           ;lcdbt.c: 118: quartet_commande=PORTD;
  1990  0792  0808               	movf	(8),w	;volatile
  1991  0793  00F3               	movwf	(lecture_commande@quartet_commande)
  1992                           	
  1993  0794                     l30000897:	
  1994                           	line	119
  1995                           ;lcdbt.c: 119: commande=commande|(quartet_commande & 0x0F);
  1996  0794  0873               	movf	(lecture_commande@quartet_commande),w
  1997  0795  390F               	andlw	0Fh
  1998  0796  0474               	iorwf	(lecture_commande@commande),w
  1999  0797  00F4               	movwf	(lecture_commande@commande)
  2000                           	
  2001  0798                     l30000898:	
  2002                           	line	120
  2003                           ;lcdbt.c: 120: RD6=0;
  2004  0798  1308               	bcf	(70/8),(70)&7
  2005                           	
  2006  0799                     l30000899:	
  2007                           	line	121
  2008                           ;lcdbt.c: 121: RD5=0;
  2009  0799  1288               	bcf	(69/8),(69)&7
  2010                           	
  2011  079A                     l30000900:	
  2012                           	line	122
  2013                           ;lcdbt.c: 122: TRISD=0x00;
  2014  079A  1003               	clrc
  2015  079B  3000               	movlw	0
  2016  079C  1803               	btfsc	status,0
  2017  079D  3001               	movlw	1
  2018  079E  1683               	bsf	status, 5	;RP0=1, select bank1
  2019  079F  1303               	bcf	status, 6	;RP1=0, select bank1
  2020  07A0  0088               	movwf	(136)^080h	;volatile
  2021                           	
  2022  07A1                     l30000901:	
  2023                           	line	123
  2024                           ;lcdbt.c: 123: return(commande);
  2025  07A1  0874               	movf	(lecture_commande@commande),w
  2026                           	
  2027  07A2                     l11:	
  2028  07A2  0008               	return
  2029                           	opt stack 0
  2030                           GLOBAL	__end_of_lecture_commande
  2031  07A3                     	__end_of_lecture_commande:
  2032                           ; =============== function _lecture_commande ends ============
  2033                           
  2034                           psect	text105,local,class=CODE,delta=2
  2035                           global __ptext105
  2036  0624                     __ptext105:
  2037                           	line	124
  2038                           	signat	_lecture_commande,89
  2039                           	global	_tempo_N_ms
  2040                           
  2041                           ; *************** function _tempo_N_ms *****************
  2042                           ; Defined at:
  2043                           ;		line 68 in file "G:\test lcd\lcdbt.c"
  2044                           ; Parameters:    Size  Location     Type
  2045                           ;  N               2    0[COMMON] int 
  2046                           ; Auto vars:     Size  Location     Type
  2047                           ;		None
  2048                           ; Return value:  Size  Location     Type
  2049                           ;		None               void
  2050                           ; Registers used:
  2051                           ;		wreg, status,2, status,0, pclath, cstack
  2052                           ; Tracked objects:
  2053                           ;		On entry : 0/0
  2054                           ;		On exit  : 0/0
  2055                           ;		Unchanged: 0/0
  2056                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057                           ;      Locals:         2       0       0       0       0
  2058                           ;      Temp:     0
  2059                           ;      Total:    2
  2060                           ; This function calls:
  2061                           ;		_tempo_1_ms
  2062                           ; This function is called by:
  2063                           ;		_lecture_commande
  2064                           ;		_init_LCD
  2065                           ;		_main
  2066                           ; This function uses a non-reentrant model
  2067                           ; 
  2068                           psect	text105
  2069                           	file	"G:\test lcd\lcdbt.c"
  2070                           	line	68
  2071                           	global	__size_of_tempo_N_ms
  2072  0021                     	__size_of_tempo_N_ms	equ	__end_of_tempo_N_ms-_tempo_N_ms
  2073                           ;lcdbt.c: 67: void tempo_N_ms(int N)
  2074                           ;lcdbt.c: 68: {
  2075                           	
  2076  0624                     _tempo_N_ms:	
  2077                           	opt stack 2
  2078                           ; Regs used in _tempo_N_ms: [wreg+status,2+status,0+pclath+cstack]
  2079                           	line	70
  2080                           	
  2081  0624                     l30000903:	
  2082                           ;lcdbt.c: 70: OPTION=OPTION & 0b11000001;
  2083  0624  1683               	bsf	status, 5	;RP0=1, select bank1
  2084  0625  1303               	bcf	status, 6	;RP1=0, select bank1
  2085  0626  0801               	movf	(129)^080h,w
  2086  0627  39C1               	andlw	0C1h
  2087  0628  0081               	movwf	(129)^080h
  2088                           	
  2089  0629                     l30000904:	
  2090                           	line	71
  2091                           ;lcdbt.c: 71: TMR0=6;
  2092  0629  3006               	movlw	(06h)
  2093  062A  1283               	bcf	status, 5	;RP0=0, select bank0
  2094  062B  1303               	bcf	status, 6	;RP1=0, select bank0
  2095  062C  0081               	movwf	(1)	;volatile
  2096                           	
  2097  062D                     l30000905:	
  2098                           	line	72
  2099                           ;lcdbt.c: 72: T0IF=0;
  2100  062D  110B               	bcf	(90/8),(90)&7
  2101  062E  2E34               	goto	l30000907
  2102                           	
  2103  062F                     l30000906:	
  2104                           	line	74
  2105  062F  120A  118A  268E   	fcall	_tempo_1_ms
              120A  118A         
  2106                           	
  2107  0634                     l30000907:	
  2108  0634  30FF               	movlw	low(-1)
  2109  0635  07F0               	addwf	(tempo_N_ms@N),f
  2110  0636  1803               	skipnc
  2111  0637  0AF1               	incf	(tempo_N_ms@N+1),f
  2112  0638  30FF               	movlw	high(-1)
  2113  0639  07F1               	addwf	(tempo_N_ms@N+1),f
  2114  063A  30FF               	movlw	high(-1)
  2115  063B  0671               	xorwf	((tempo_N_ms@N+1))&07fh,w
  2116  063C  1D03               	skipz
  2117  063D  2E40               	goto	u235
  2118  063E  30FF               	movlw	low(-1)
  2119  063F  0670               	xorwf	((tempo_N_ms@N))&07fh,w
  2120  0640                     u235:
  2121                           
  2122  0640  1D03               	skipz
  2123  0641  2E43               	goto	u231
  2124  0642  2E44               	goto	u230
  2125  0643                     u231:
  2126  0643  2E2F               	goto	l30000906
  2127  0644                     u230:
  2128                           	
  2129  0644                     l5:	
  2130  0644  0008               	return
  2131                           	opt stack 0
  2132                           GLOBAL	__end_of_tempo_N_ms
  2133  0645                     	__end_of_tempo_N_ms:
  2134                           ; =============== function _tempo_N_ms ends ============
  2135                           
  2136                           psect	text106,local,class=CODE,delta=2
  2137                           global __ptext106
  2138  068E                     __ptext106:
  2139                           	line	75
  2140                           	signat	_tempo_N_ms,4216
  2141                           	global	_tempo_1_ms
  2142                           
  2143                           ; *************** function _tempo_1_ms *****************
  2144                           ; Defined at:
  2145                           ;		line 62 in file "G:\test lcd\lcdbt.c"
  2146                           ; Parameters:    Size  Location     Type
  2147                           ;		None
  2148                           ; Auto vars:     Size  Location     Type
  2149                           ;		None
  2150                           ; Return value:  Size  Location     Type
  2151                           ;		None               void
  2152                           ; Registers used:
  2153                           ;		None
  2154                           ; Tracked objects:
  2155                           ;		On entry : 0/0
  2156                           ;		On exit  : 0/0
  2157                           ;		Unchanged: 0/0
  2158                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159                           ;      Locals:         0       0       0       0       0
  2160                           ;      Temp:     0
  2161                           ;      Total:    0
  2162                           ; This function calls:
  2163                           ;		Nothing
  2164                           ; This function is called by:
  2165                           ;		_tempo_N_ms
  2166                           ; This function uses a non-reentrant model
  2167                           ; 
  2168                           psect	text106
  2169                           	file	"G:\test lcd\lcdbt.c"
  2170                           	line	62
  2171                           	global	__size_of_tempo_1_ms
  2172  0008                     	__size_of_tempo_1_ms	equ	__end_of_tempo_1_ms-_tempo_1_ms
  2173                           ;lcdbt.c: 61: void tempo_1_ms(void)
  2174                           ;lcdbt.c: 62: {
  2175                           	
  2176  068E                     _tempo_1_ms:	
  2177                           	opt stack 1
  2178                           ; Regs used in _tempo_1_ms: []
  2179                           	
  2180  068E                     l30000908:	
  2181                           	
  2182  068E                     l2:	
  2183                           	line	63
  2184  068E  1283               	bcf	status, 5	;RP0=0, select bank0
  2185  068F  1303               	bcf	status, 6	;RP1=0, select bank0
  2186  0690  1D0B               	btfss	(90/8),(90)&7
  2187  0691  2E93               	goto	u241
  2188  0692  2E94               	goto	u240
  2189  0693                     u241:
  2190  0693  2E8E               	goto	l2
  2191  0694                     u240:
  2192                           	
  2193  0694                     l4:	
  2194                           	line	64
  2195                           ;lcdbt.c: 64: T0IF=0;
  2196  0694  110B               	bcf	(90/8),(90)&7
  2197                           	
  2198  0695                     l1:	
  2199  0695  0008               	return
  2200                           	opt stack 0
  2201                           GLOBAL	__end_of_tempo_1_ms
  2202  0696                     	__end_of_tempo_1_ms:
  2203                           ; =============== function _tempo_1_ms ends ============
  2204                           
  2205                           psect	text107,local,class=CODE,delta=2
  2206                           global __ptext107
  2207  06AE                     __ptext107:
  2208                           	line	65
  2209                           	signat	_tempo_1_ms,88
  2210                           	global	btemp
  2211  007E                     	btemp set 07Eh


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Fri Apr 09 17:01:54 2021

                               l1 0695                                 l2 068E                                 l4 0694  
                               l5 0644                                 l9 06A3                                 _i 0078  
                               pc 0002                                l10 06AD                                l11 07A2  
                              l12 068D                                _DA 04A5                                _BF 04A0  
                              _DC 0019                                l16 0663                                l17 07FF  
                              l18 0682                                l19 076D                                l29 069C  
                              l39 073E                                _PD 001B                                _RD 0C60  
                    ??_init_PORTD 0070                                _UA 04A1                                _TO 001C  
                              _RW 04A2                                _WR 0C61                     print_string@i 0021  
                   print_string@s 0020                                fsr 0004                       __pbssCOMMON 0078  
       __end_of_ecriture_commande 0664                               _CM0 04E0                               _CM1 04E1  
                             _CM2 04E2                               _CKE 04A6                               _IBF 044F  
                             _CIS 04E3                               _CKP 00A4                               _GIE 005F  
                             _BOR 0470                               _RA0 0028                               _RA1 0029  
                             _RB0 0030                               _RA2 002A                               _RB1 0031  
                             _RA3 002B                               _RC0 0038                               _RB2 0032  
                             _RA4 002C                               _RC1 0039                               _RB3 0033  
                             _RA5 002D                               _RD0 0040                               _RC2 003A  
                             _RB4 0034                               _RD1 0041                               _RC3 003B  
                             _RB5 0035                               _RE0 0048                               _RD2 0042  
                             _RC4 003C                               _RB6 0036                               _RE1 0049  
                             _RD3 0043                               _RC5 003D                               _RB7 0037  
                             _RE2 004A                               _RD4 0044                               _RC6 003E  
                             _RD5 0045                               _RC7 003F                               _OBF 044E  
                             _RD6 0046                               _RD7 0047                               u210 068D  
                   ?_print_string 0078                               u211 068C                               u205 0652  
                             u230 0644                               u231 0643                               u240 0694  
                             _FSR 0004                               u241 0693                               u225 0787  
                             u170 076D                               _PCL 0002                               u235 0640  
                             u171 076C                               u190 0727                               _PS0 0408  
                             _PR2 0092                               u191 0726                               u175 0769  
                             _PS1 0409                               _PS2 040A                               _PEN 048A  
                             _RP0 001D                               _IRP 001F                               u185 0671  
                             _RP1 001E                               _SEN 0488                               _PSA 040B  
                             _POR 0471                               _RX9 00C6                               _SMP 04A7  
                             _TX9 04C6                               indf 0000                        _tempo_1_ms 068E  
                 __size_of_strlen 002B                __end_of_tempo_1_ms 0696                        _tempo_N_ms 0624  
              __end_of_tempo_N_ms 0645                              _ADIE 0466                              _ADIF 0066  
                            _ADFM 04FF                              _ADGO 00FA                              _ADON 00F8  
                            _CHS0 00FB                              _CHS1 00FC                              _CHS2 00FD  
                            _EEIE 046C                          __ptext94 06AE                          __ptext95 0696  
                            _EEIF 006C                          __ptext96 073F                          __ptext97 07A3  
                        __ptext98 069D                              STR_1 060F                          __ptext99 06AA  
                            _GCEN 048F                              _CMIE 046E                              _CMIF 006E  
                            _BRGH 04C2                              _T0IE 005D                              _T0IF 005A  
                            _CREN 00C4                              _T0CS 040D                              _FERR 00C2  
                            _IBOV 044D                              _CVR0 04E8                              _CVR1 04E9  
                            _CVR2 04EA                              _CVR3 04EB                              _T0SE 040C  
                            _CSRC 04C7                              _INDF 0000                              _PIE1 008C  
                            _PIE2 008D                              _CVRR 04ED                              _PEIE 005E  
                            _INTE 005C                              _INTF 0059                              _RBIE 005B  
                            _RBIF 0058                              _RCIE 0465                              _RCEN 048B  
                            _RCIF 0065                              _PCON 008E                              _PIR1 000C  
                            _PIR2 000D                              _OERR 00C1                              _RBPU 040F  
                            _RX9D 00C0                              _TMR0 0001                              _TMR2 0011  
                            _WCOL 00A7                              _SPEN 00C7                              _RSEN 0489  
                            _TX9D 04C0                              _SREN 00C5                              _TRMT 04C1  
                            _STOP 04A4                              _TXIE 0464                              _ZERO 001A  
                            _WREN 0C62                              _TXEN 04C5                              _TXIF 0064  
                            _SYNC 04C4             __size_of_print_string 002F                       ?_tempo_1_ms 0070  
                      _print_char 0664                       ?_tempo_N_ms 0070                              _main 06E9  
              __end_of_print_char 0683                              btemp 007E                          _init_LCD 07A3  
                     tempo_N_ms@N 0070                    ??_ecran_gauche 0073                              start 0000  
                       ?_init_LCD 0078               __size_of_allume_LCD 0004               start_initialization 06A4  
                     ?_print_char 0078                        ??_init_LCD 0073                         stringcode 0608  
                         _CCP1CON 0017                           _CCP2CON 001D                      ??_tempo_1_ms 0070  
                         _ACKSTAT 048E                             _C1INV 04E4                             _C2INV 04E5  
                           _C1OUT 04E6                             _C2OUT 04E7                      ??_tempo_N_ms 0070  
                           _ADCS0 00FE                             _ADCS1 00FF                             _ADCS2 04FE  
                           _ADDEN 00C3                             ?_main 0078                             _ACKEN 048C  
                       __ptext100 0664                         __ptext101 0714                         __ptext102 0645  
                           _ACKDT 048D                         __ptext103 0683                         __ptext104 076E  
                       __ptext105 0624                         __ptext106 068E                         __ptext107 06AE  
                           _BCLIE 046B                             _BCLIF 006B                             _CCP1X 00BD  
                           _CCP1Y 00BC                             _CCP2X 00ED                             _CCP2Y 00EC  
                           _EEADR 010D                             _CARRY 0018                             _EEPGD 0C67  
                           _CMCON 009C                             _T1CON 0010                             _T2CON 0012  
                         _T1CKPS0 0084                           _T1CKPS1 0085                             _PCFG0 04F8  
                           _PCFG1 04F9                             _PCFG2 04FA                             _PCFG3 04FB  
                         ?_strlen 0076                           _T2CKPS0 0090                           _T2CKPS1 0091  
                           _CVREN 04EF                             _CVROE 04EE                             _RCREG 001A  
                           _RCSTA 0018                          ??_strlen 0070                             _TMR1H 000F  
                           _TMR1L 000E                             _SPBRG 0099                             _PORTA 0005  
                           _PORTB 0006                           _T1OSCEN 0083                             _PORTC 0007  
                           _PORTD 0008                             _PORTE 0009                             _PSPIE 0467  
                           _PSPIF 0067                             _START 04A3                             _SSPM0 00A0  
                           _SSPM1 00A1                             _SSPM2 00A2                             _SSPM3 00A3  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _SSPIE 0463                             _TRISE 0089  
                           _SSPIF 0063                             _SSPEN 00A5                             _SSPOV 00A6  
                           _WRERR 0C63                             _TXREG 0019                 __size_of_init_LCD 005D  
                           _TXSTA 0098                         __pstrings 0600                      ??_print_char 0076  
                  __pcstackCOMMON 0070               __size_of_attente_bf 000B          __end_of_lecture_commande 07A3  
                         _PSPMODE 044C                           _SSPCON2 0091                           _SSPSTAT 0094  
                         _TOUTPS0 0093                           _TOUTPS1 0094                           _TOUTPS2 0095  
                         _TOUTPS3 0096                             pclath 000A               __size_of_init_PORTD 0007  
                           status 0003                      _ecran_gauche 0696  lecture_commande@quartet_commande 0073  
               _ecriture_commande 0645              __end_of_ecran_gauche 069D                     __size_of_main 002B  
                        l30000900 079A                          l30000901 07A1                          l30000830 06F3  
                        l30000903 0624                          l30000831 06FC                          l30000904 0629  
                        l30000840 07AC                          l30000832 0702                          l30000905 062D  
                        l30000841 07B3                          l30000833 0707                          l30000906 062F  
                        l30000850 07CC                          l30000842 07B6                          l30000834 0696  
                        l30000907 0634                          l30000851 07CD                          l30000843 07B7  
                        l30000835 0742                          l30000908 068E                          l30000860 07F9  
                        l30000852 07CE                          l30000844 07B8                          l30000836 0747  
                        l30000861 069D                          l30000853 07D7                          l30000845 07B9  
                        l30000837 0753                          l30000829 06E9                          l30000870 0680  
                        l30000862 06AA                          l30000854 07DC                          l30000846 07BC  
                        l30000838 075B                          l30000871 0681                          l30000863 0665  
                        l30000855 07DD                          l30000847 07BD                          l30000839 07A3  
                        l30000880 065B                          l30000872 0715                          l30000864 066A  
                        l30000856 07DE                          l30000848 07BE                          l30000881 065C  
                        l30000873 0717                          l30000865 066D                          l30000857 07E7  
                        l30000849 07C7                          l30000890 0776                          l30000882 065D  
                        l30000874 0727                          l30000866 066E                          l30000858 07ED  
                        l30000891 077F                          l30000883 0661                          l30000867 067A  
                        l30000859 07F3                          l30000892 0782                          l30000884 0662  
                        l30000876 0646                          l30000868 067B                          l30000893 0784  
                        l30000885 0683                          l30000877 064B        __size_of_ecriture_commande 001F  
                        l30000869 067C                          l30000894 0790                          l30000886 0683  
                        l30000878 064E                          l30000895 0791                          l30000887 076E  
                        l30000879 064F                          l30000896 0792                          l30000888 0772  
                        l30000897 0794                          l30000889 0775                          l30000898 0798  
                        l30000899 0799                       __stringbase 060E                            ??_main 0074  
              ?_ecriture_commande 0078                    ??_print_string 0074                        __pmaintext 06E9  
       __size_of_lecture_commande 0035                          strlen@cp 0075                          stringdir 0609  
                      _allume_LCD 06AA                          stringjmp 060D                          stringtab 0600  
                          _ADCON0 001F                            _ADCON1 009F                       main@message 0023  
                          _CCP1M0 00B8                            _CCP1M1 00B9                            _CCP1M2 00BA  
                          _CCP1M3 00BB                            _CCP2M0 00E8                            _CCP2M1 00E9  
                          _CCP2M2 00EA                            _CCP2M3 00EB                            _CCP1IE 0462  
                          _CCP1IF 0062                            _CCP2IE 0468                            _CCP2IF 0068  
                          _ADRESH 001E                            _EEADRH 010F                            _ADRESL 009E  
              __end_of_allume_LCD 06AE                            _EEADRL 010D                            _EEDATA 010C  
                          _CCPR1H 0016                            _EEDATH 010E                            _CCPR2H 001C  
                          _CCPR1L 0015                            _CCPR2L 001B                            _EECON1 018C  
                          _EECON2 018D                      __end_of_main 0714                            _GODONE 00FA  
            end_of_initialization 06A6                            _CVRCON 009D                            _T1SYNC 0082  
                          _INTEDG 040E                            _PCLATH 000A                            _INTCON 000B  
                   __pcstackBANK0 0020                            _TMR0IE 005D                            _TMR0IF 005A  
                          _TMR1IE 0460                            _TMR1IF 0060                            _TMR1CS 0081  
                          _TMR2IE 0461                            _TMR2IF 0061                            _OPTION 0081  
                          _TMR1ON 0080                            _TMR2ON 0092                            _SSPADD 0093  
                          _TRISA0 0428                            _TRISA1 0429                            _TRISB0 0430  
                          _TRISA2 042A                            _TRISB1 0431                            _TRISA3 042B  
                          _TRISC0 0438                            _TRISB2 0432                            _TRISA4 042C  
                          _TRISC1 0439                            _TRISB3 0433                            _TRISA5 042D  
                          _TRISD0 0440                            _TRISC2 043A                            _TRISB4 0434  
                          _TRISD1 0441                            _TRISC3 043B                            _TRISB5 0435  
                          _TRISE0 0448                            _TRISD2 0442                            _TRISC4 043C  
                          _TRISB6 0436                            _TRISE1 0449                            _TRISD3 0443  
                          _TRISC5 043D                            _TRISB7 0437                            _TRISE2 044A  
                          _TRISD4 0444                            _TRISC6 043E                            _TRISD5 0445  
                          _TRISC7 043F                            _TRISD6 0446                            _TRISD7 0447  
                          _STATUS 0003               __size_of_tempo_1_ms 0008                     ?_ecran_gauche 0078  
                          _SSPCON 0014                            _SSPBUF 0013                       ?_allume_LCD 0070  
                  __end_of_strlen 073F                  __end_of_init_LCD 0800               __size_of_tempo_N_ms 0021  
       ecriture_commande@commande 0077                  _lecture_commande 076E               __size_of_print_char 001F  
           __size_of_ecran_gauche 0007          lecture_commande@commande 0074                        _attente_bf 0683  
               ?_lecture_commande 0075                __end_of_attente_bf 068E                           strlen@s 0074  
                   print_char@car 0077                      _print_string 073F                            _strlen 0714  
                    ??_allume_LCD 0070               ??_ecriture_commande 0076                        _init_PORTD 069D  
              __end_of_init_PORTD 06A4                       ?_attente_bf 0076              __end_of_print_string 076E  
                     ?_init_PORTD 0070                ??_lecture_commande 0072                      ??_attente_bf 0075  
